<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20231.24.0202.0949                               -->
<workbook original-version='18.1' source-build='2023.1.10 (20231.24.0202.0949)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='T1 (outputFile)' inline='true' name='federated.11f3alo1x9908918n5h4g1c9dac3' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='outputFile' name='excel-direct.0a8coyt09qphz81gidc8p0sq0fww'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/USER/Desktop/NTU Fleximasters/MODULE 1 DATA MANAGEMENT/NTU FM MODULE 1 GROUP PROJECT/outputFile.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Pivot' type='pivot'>
          <columns>
            <column datatype='date' date-parse-format='yyyy MMM' name='Pivot Field Names' />
            <column datatype='integer' name='Pivot Field Values' />
          </columns>
          <tag name='Pivot Field Names'>
            <value name='[2017 Apr]' />
            <value name='[2017 Aug]' />
            <value name='[2017 Dec]' />
            <value name='[2017 Feb]' />
            <value name='[2017 Jan]' />
            <value name='[2017 Jul]' />
            <value name='[2017 Jun]' />
            <value name='[2017 Mar]' />
            <value name='[2017 May]' />
            <value name='[2017 Nov]' />
            <value name='[2017 Oct]' />
            <value name='[2017 Sep]' />
            <value name='[2018 Apr]' />
            <value name='[2018 Aug]' />
            <value name='[2018 Dec]' />
            <value name='[2018 Feb]' />
            <value name='[2018 Jan]' />
            <value name='[2018 Jul]' />
            <value name='[2018 Jun]' />
            <value name='[2018 Mar]' />
            <value name='[2018 May]' />
            <value name='[2018 Nov]' />
            <value name='[2018 Oct]' />
            <value name='[2018 Sep]' />
            <value name='[2019 Apr]' />
            <value name='[2019 Aug]' />
            <value name='[2019 Dec]' />
            <value name='[2019 Feb]' />
            <value name='[2019 Jan]' />
            <value name='[2019 Jul]' />
            <value name='[2019 Jun]' />
            <value name='[2019 Mar]' />
            <value name='[2019 May]' />
            <value name='[2019 Nov]' />
            <value name='[2019 Oct]' />
            <value name='[2019 Sep]' />
            <value name='[2020 Apr]' />
            <value name='[2020 Aug]' />
            <value name='[2020 Dec]' />
            <value name='[2020 Feb]' />
            <value name='[2020 Jan]' />
            <value name='[2020 Jul]' />
            <value name='[2020 Jun]' />
            <value name='[2020 Mar]' />
            <value name='[2020 May]' />
            <value name='[2020 Nov]' />
            <value name='[2020 Oct]' />
            <value name='[2020 Sep]' />
            <value name='[2021 Apr]' />
            <value name='[2021 Aug]' />
            <value name='[2021 Dec]' />
            <value name='[2021 Feb]' />
            <value name='[2021 Jan]' />
            <value name='[2021 Jul]' />
            <value name='[2021 Jun]' />
            <value name='[2021 Mar]' />
            <value name='[2021 May]' />
            <value name='[2021 Nov]' />
            <value name='[2021 Oct]' />
            <value name='[2021 Sep]' />
            <value name='[2022 Apr]' />
            <value name='[2022 Aug]' />
            <value name='[2022 Dec]' />
            <value name='[2022 Feb]' />
            <value name='[2022 Jan]' />
            <value name='[2022 Jul]' />
            <value name='[2022 Jun]' />
            <value name='[2022 Mar]' />
            <value name='[2022 May]' />
            <value name='[2022 Nov]' />
            <value name='[2022 Oct]' />
            <value name='[2022 Sep]' />
            <value name='[2023 Apr]' />
            <value name='[2023 Aug]' />
            <value name='[2023 Dec]' />
            <value name='[2023 Feb]' />
            <value name='[2023 Jan]' />
            <value name='[2023 Jul]' />
            <value name='[2023 Jun]' />
            <value name='[2023 Mar]' />
            <value name='[2023 May]' />
            <value name='[2023 Nov]' />
            <value name='[2023 Oct]' />
            <value name='[2023 Sep]' />
            <value name='[2024 Jan]' />
          </tag>
          <groups>
            <group name='Pivot Field Values'>
              <field name='[T1].[2017 Apr]' />
              <field name='[T1].[2017 Aug]' />
              <field name='[T1].[2017 Dec]' />
              <field name='[T1].[2017 Feb]' />
              <field name='[T1].[2017 Jan]' />
              <field name='[T1].[2017 Jul]' />
              <field name='[T1].[2017 Jun]' />
              <field name='[T1].[2017 Mar]' />
              <field name='[T1].[2017 May]' />
              <field name='[T1].[2017 Nov]' />
              <field name='[T1].[2017 Oct]' />
              <field name='[T1].[2017 Sep]' />
              <field name='[T1].[2018 Apr]' />
              <field name='[T1].[2018 Aug]' />
              <field name='[T1].[2018 Dec]' />
              <field name='[T1].[2018 Feb]' />
              <field name='[T1].[2018 Jan]' />
              <field name='[T1].[2018 Jul]' />
              <field name='[T1].[2018 Jun]' />
              <field name='[T1].[2018 Mar]' />
              <field name='[T1].[2018 May]' />
              <field name='[T1].[2018 Nov]' />
              <field name='[T1].[2018 Oct]' />
              <field name='[T1].[2018 Sep]' />
              <field name='[T1].[2019 Apr]' />
              <field name='[T1].[2019 Aug]' />
              <field name='[T1].[2019 Dec]' />
              <field name='[T1].[2019 Feb]' />
              <field name='[T1].[2019 Jan]' />
              <field name='[T1].[2019 Jul]' />
              <field name='[T1].[2019 Jun]' />
              <field name='[T1].[2019 Mar]' />
              <field name='[T1].[2019 May]' />
              <field name='[T1].[2019 Nov]' />
              <field name='[T1].[2019 Oct]' />
              <field name='[T1].[2019 Sep]' />
              <field name='[T1].[2020 Apr]' />
              <field name='[T1].[2020 Aug]' />
              <field name='[T1].[2020 Dec]' />
              <field name='[T1].[2020 Feb]' />
              <field name='[T1].[2020 Jan]' />
              <field name='[T1].[2020 Jul]' />
              <field name='[T1].[2020 Jun]' />
              <field name='[T1].[2020 Mar]' />
              <field name='[T1].[2020 May]' />
              <field name='[T1].[2020 Nov]' />
              <field name='[T1].[2020 Oct]' />
              <field name='[T1].[2020 Sep]' />
              <field name='[T1].[2021 Apr]' />
              <field name='[T1].[2021 Aug]' />
              <field name='[T1].[2021 Dec]' />
              <field name='[T1].[2021 Feb]' />
              <field name='[T1].[2021 Jan]' />
              <field name='[T1].[2021 Jul]' />
              <field name='[T1].[2021 Jun]' />
              <field name='[T1].[2021 Mar]' />
              <field name='[T1].[2021 May]' />
              <field name='[T1].[2021 Nov]' />
              <field name='[T1].[2021 Oct]' />
              <field name='[T1].[2021 Sep]' />
              <field name='[T1].[2022 Apr]' />
              <field name='[T1].[2022 Aug]' />
              <field name='[T1].[2022 Dec]' />
              <field name='[T1].[2022 Feb]' />
              <field name='[T1].[2022 Jan]' />
              <field name='[T1].[2022 Jul]' />
              <field name='[T1].[2022 Jun]' />
              <field name='[T1].[2022 Mar]' />
              <field name='[T1].[2022 May]' />
              <field name='[T1].[2022 Nov]' />
              <field name='[T1].[2022 Oct]' />
              <field name='[T1].[2022 Sep]' />
              <field name='[T1].[2023 Apr]' />
              <field name='[T1].[2023 Aug]' />
              <field name='[T1].[2023 Dec]' />
              <field name='[T1].[2023 Feb]' />
              <field name='[T1].[2023 Jan]' />
              <field name='[T1].[2023 Jul]' />
              <field name='[T1].[2023 Jun]' />
              <field name='[T1].[2023 Mar]' />
              <field name='[T1].[2023 May]' />
              <field name='[T1].[2023 Nov]' />
              <field name='[T1].[2023 Oct]' />
              <field name='[T1].[2023 Sep]' />
              <field name='[T1].[2024 Jan]' />
            </group>
          </groups>
          <relation connection='excel-direct.0a8coyt09qphz81gidc8p0sq0fww' name='T1' table='[T1$]' type='table'>
            <columns gridOrigin='A2:CJ64:no:A2:CJ64:0' header='yes' outcome='2'>
              <column datatype='string' name='Data Series' ordinal='0' />
              <column datatype='real' name='Latitude' ordinal='1' />
              <column datatype='real' name='Longitude' ordinal='2' />
              <column datatype='integer' name='2024 Jan' ordinal='3' />
              <column datatype='integer' name='2023 Dec' ordinal='4' />
              <column datatype='integer' name='2023 Nov' ordinal='5' />
              <column datatype='integer' name='2023 Oct' ordinal='6' />
              <column datatype='integer' name='2023 Sep' ordinal='7' />
              <column datatype='integer' name='2023 Aug' ordinal='8' />
              <column datatype='integer' name='2023 Jul' ordinal='9' />
              <column datatype='integer' name='2023 Jun' ordinal='10' />
              <column datatype='integer' name='2023 May' ordinal='11' />
              <column datatype='integer' name='2023 Apr' ordinal='12' />
              <column datatype='integer' name='2023 Mar' ordinal='13' />
              <column datatype='integer' name='2023 Feb' ordinal='14' />
              <column datatype='integer' name='2023 Jan' ordinal='15' />
              <column datatype='integer' name='2022 Dec' ordinal='16' />
              <column datatype='integer' name='2022 Nov' ordinal='17' />
              <column datatype='integer' name='2022 Oct' ordinal='18' />
              <column datatype='integer' name='2022 Sep' ordinal='19' />
              <column datatype='integer' name='2022 Aug' ordinal='20' />
              <column datatype='integer' name='2022 Jul' ordinal='21' />
              <column datatype='integer' name='2022 Jun' ordinal='22' />
              <column datatype='integer' name='2022 May' ordinal='23' />
              <column datatype='integer' name='2022 Apr' ordinal='24' />
              <column datatype='integer' name='2022 Mar' ordinal='25' />
              <column datatype='integer' name='2022 Feb' ordinal='26' />
              <column datatype='integer' name='2022 Jan' ordinal='27' />
              <column datatype='integer' name='2021 Dec' ordinal='28' />
              <column datatype='integer' name='2021 Nov' ordinal='29' />
              <column datatype='integer' name='2021 Oct' ordinal='30' />
              <column datatype='integer' name='2021 Sep' ordinal='31' />
              <column datatype='integer' name='2021 Aug' ordinal='32' />
              <column datatype='integer' name='2021 Jul' ordinal='33' />
              <column datatype='integer' name='2021 Jun' ordinal='34' />
              <column datatype='integer' name='2021 May' ordinal='35' />
              <column datatype='integer' name='2021 Apr' ordinal='36' />
              <column datatype='integer' name='2021 Mar' ordinal='37' />
              <column datatype='integer' name='2021 Feb' ordinal='38' />
              <column datatype='integer' name='2021 Jan' ordinal='39' />
              <column datatype='integer' name='2020 Dec' ordinal='40' />
              <column datatype='integer' name='2020 Nov' ordinal='41' />
              <column datatype='integer' name='2020 Oct' ordinal='42' />
              <column datatype='integer' name='2020 Sep' ordinal='43' />
              <column datatype='integer' name='2020 Aug' ordinal='44' />
              <column datatype='integer' name='2020 Jul' ordinal='45' />
              <column datatype='integer' name='2020 Jun' ordinal='46' />
              <column datatype='integer' name='2020 May' ordinal='47' />
              <column datatype='integer' name='2020 Apr' ordinal='48' />
              <column datatype='integer' name='2020 Mar' ordinal='49' />
              <column datatype='integer' name='2020 Feb' ordinal='50' />
              <column datatype='integer' name='2020 Jan' ordinal='51' />
              <column datatype='integer' name='2019 Dec' ordinal='52' />
              <column datatype='integer' name='2019 Nov' ordinal='53' />
              <column datatype='integer' name='2019 Oct' ordinal='54' />
              <column datatype='integer' name='2019 Sep' ordinal='55' />
              <column datatype='integer' name='2019 Aug' ordinal='56' />
              <column datatype='integer' name='2019 Jul' ordinal='57' />
              <column datatype='integer' name='2019 Jun' ordinal='58' />
              <column datatype='integer' name='2019 May' ordinal='59' />
              <column datatype='integer' name='2019 Apr' ordinal='60' />
              <column datatype='integer' name='2019 Mar' ordinal='61' />
              <column datatype='integer' name='2019 Feb' ordinal='62' />
              <column datatype='integer' name='2019 Jan' ordinal='63' />
              <column datatype='integer' name='2018 Dec' ordinal='64' />
              <column datatype='integer' name='2018 Nov' ordinal='65' />
              <column datatype='integer' name='2018 Oct' ordinal='66' />
              <column datatype='integer' name='2018 Sep' ordinal='67' />
              <column datatype='integer' name='2018 Aug' ordinal='68' />
              <column datatype='integer' name='2018 Jul' ordinal='69' />
              <column datatype='integer' name='2018 Jun' ordinal='70' />
              <column datatype='integer' name='2018 May' ordinal='71' />
              <column datatype='integer' name='2018 Apr' ordinal='72' />
              <column datatype='integer' name='2018 Mar' ordinal='73' />
              <column datatype='integer' name='2018 Feb' ordinal='74' />
              <column datatype='integer' name='2018 Jan' ordinal='75' />
              <column datatype='integer' name='2017 Dec' ordinal='76' />
              <column datatype='integer' name='2017 Nov' ordinal='77' />
              <column datatype='integer' name='2017 Oct' ordinal='78' />
              <column datatype='integer' name='2017 Sep' ordinal='79' />
              <column datatype='integer' name='2017 Aug' ordinal='80' />
              <column datatype='integer' name='2017 Jul' ordinal='81' />
              <column datatype='integer' name='2017 Jun' ordinal='82' />
              <column datatype='integer' name='2017 May' ordinal='83' />
              <column datatype='integer' name='2017 Apr' ordinal='84' />
              <column datatype='integer' name='2017 Mar' ordinal='85' />
              <column datatype='integer' name='2017 Feb' ordinal='86' />
              <column datatype='integer' name='2017 Jan' ordinal='87' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Pivot' type='pivot'>
          <columns>
            <column datatype='date' date-parse-format='yyyy MMM' name='Pivot Field Names' />
            <column datatype='integer' name='Pivot Field Values' />
          </columns>
          <tag name='Pivot Field Names'>
            <value name='[2017 Apr]' />
            <value name='[2017 Aug]' />
            <value name='[2017 Dec]' />
            <value name='[2017 Feb]' />
            <value name='[2017 Jan]' />
            <value name='[2017 Jul]' />
            <value name='[2017 Jun]' />
            <value name='[2017 Mar]' />
            <value name='[2017 May]' />
            <value name='[2017 Nov]' />
            <value name='[2017 Oct]' />
            <value name='[2017 Sep]' />
            <value name='[2018 Apr]' />
            <value name='[2018 Aug]' />
            <value name='[2018 Dec]' />
            <value name='[2018 Feb]' />
            <value name='[2018 Jan]' />
            <value name='[2018 Jul]' />
            <value name='[2018 Jun]' />
            <value name='[2018 Mar]' />
            <value name='[2018 May]' />
            <value name='[2018 Nov]' />
            <value name='[2018 Oct]' />
            <value name='[2018 Sep]' />
            <value name='[2019 Apr]' />
            <value name='[2019 Aug]' />
            <value name='[2019 Dec]' />
            <value name='[2019 Feb]' />
            <value name='[2019 Jan]' />
            <value name='[2019 Jul]' />
            <value name='[2019 Jun]' />
            <value name='[2019 Mar]' />
            <value name='[2019 May]' />
            <value name='[2019 Nov]' />
            <value name='[2019 Oct]' />
            <value name='[2019 Sep]' />
            <value name='[2020 Apr]' />
            <value name='[2020 Aug]' />
            <value name='[2020 Dec]' />
            <value name='[2020 Feb]' />
            <value name='[2020 Jan]' />
            <value name='[2020 Jul]' />
            <value name='[2020 Jun]' />
            <value name='[2020 Mar]' />
            <value name='[2020 May]' />
            <value name='[2020 Nov]' />
            <value name='[2020 Oct]' />
            <value name='[2020 Sep]' />
            <value name='[2021 Apr]' />
            <value name='[2021 Aug]' />
            <value name='[2021 Dec]' />
            <value name='[2021 Feb]' />
            <value name='[2021 Jan]' />
            <value name='[2021 Jul]' />
            <value name='[2021 Jun]' />
            <value name='[2021 Mar]' />
            <value name='[2021 May]' />
            <value name='[2021 Nov]' />
            <value name='[2021 Oct]' />
            <value name='[2021 Sep]' />
            <value name='[2022 Apr]' />
            <value name='[2022 Aug]' />
            <value name='[2022 Dec]' />
            <value name='[2022 Feb]' />
            <value name='[2022 Jan]' />
            <value name='[2022 Jul]' />
            <value name='[2022 Jun]' />
            <value name='[2022 Mar]' />
            <value name='[2022 May]' />
            <value name='[2022 Nov]' />
            <value name='[2022 Oct]' />
            <value name='[2022 Sep]' />
            <value name='[2023 Apr]' />
            <value name='[2023 Aug]' />
            <value name='[2023 Dec]' />
            <value name='[2023 Feb]' />
            <value name='[2023 Jan]' />
            <value name='[2023 Jul]' />
            <value name='[2023 Jun]' />
            <value name='[2023 Mar]' />
            <value name='[2023 May]' />
            <value name='[2023 Nov]' />
            <value name='[2023 Oct]' />
            <value name='[2023 Sep]' />
            <value name='[2024 Jan]' />
          </tag>
          <groups>
            <group name='Pivot Field Values'>
              <field name='[T1].[2017 Apr]' />
              <field name='[T1].[2017 Aug]' />
              <field name='[T1].[2017 Dec]' />
              <field name='[T1].[2017 Feb]' />
              <field name='[T1].[2017 Jan]' />
              <field name='[T1].[2017 Jul]' />
              <field name='[T1].[2017 Jun]' />
              <field name='[T1].[2017 Mar]' />
              <field name='[T1].[2017 May]' />
              <field name='[T1].[2017 Nov]' />
              <field name='[T1].[2017 Oct]' />
              <field name='[T1].[2017 Sep]' />
              <field name='[T1].[2018 Apr]' />
              <field name='[T1].[2018 Aug]' />
              <field name='[T1].[2018 Dec]' />
              <field name='[T1].[2018 Feb]' />
              <field name='[T1].[2018 Jan]' />
              <field name='[T1].[2018 Jul]' />
              <field name='[T1].[2018 Jun]' />
              <field name='[T1].[2018 Mar]' />
              <field name='[T1].[2018 May]' />
              <field name='[T1].[2018 Nov]' />
              <field name='[T1].[2018 Oct]' />
              <field name='[T1].[2018 Sep]' />
              <field name='[T1].[2019 Apr]' />
              <field name='[T1].[2019 Aug]' />
              <field name='[T1].[2019 Dec]' />
              <field name='[T1].[2019 Feb]' />
              <field name='[T1].[2019 Jan]' />
              <field name='[T1].[2019 Jul]' />
              <field name='[T1].[2019 Jun]' />
              <field name='[T1].[2019 Mar]' />
              <field name='[T1].[2019 May]' />
              <field name='[T1].[2019 Nov]' />
              <field name='[T1].[2019 Oct]' />
              <field name='[T1].[2019 Sep]' />
              <field name='[T1].[2020 Apr]' />
              <field name='[T1].[2020 Aug]' />
              <field name='[T1].[2020 Dec]' />
              <field name='[T1].[2020 Feb]' />
              <field name='[T1].[2020 Jan]' />
              <field name='[T1].[2020 Jul]' />
              <field name='[T1].[2020 Jun]' />
              <field name='[T1].[2020 Mar]' />
              <field name='[T1].[2020 May]' />
              <field name='[T1].[2020 Nov]' />
              <field name='[T1].[2020 Oct]' />
              <field name='[T1].[2020 Sep]' />
              <field name='[T1].[2021 Apr]' />
              <field name='[T1].[2021 Aug]' />
              <field name='[T1].[2021 Dec]' />
              <field name='[T1].[2021 Feb]' />
              <field name='[T1].[2021 Jan]' />
              <field name='[T1].[2021 Jul]' />
              <field name='[T1].[2021 Jun]' />
              <field name='[T1].[2021 Mar]' />
              <field name='[T1].[2021 May]' />
              <field name='[T1].[2021 Nov]' />
              <field name='[T1].[2021 Oct]' />
              <field name='[T1].[2021 Sep]' />
              <field name='[T1].[2022 Apr]' />
              <field name='[T1].[2022 Aug]' />
              <field name='[T1].[2022 Dec]' />
              <field name='[T1].[2022 Feb]' />
              <field name='[T1].[2022 Jan]' />
              <field name='[T1].[2022 Jul]' />
              <field name='[T1].[2022 Jun]' />
              <field name='[T1].[2022 Mar]' />
              <field name='[T1].[2022 May]' />
              <field name='[T1].[2022 Nov]' />
              <field name='[T1].[2022 Oct]' />
              <field name='[T1].[2022 Sep]' />
              <field name='[T1].[2023 Apr]' />
              <field name='[T1].[2023 Aug]' />
              <field name='[T1].[2023 Dec]' />
              <field name='[T1].[2023 Feb]' />
              <field name='[T1].[2023 Jan]' />
              <field name='[T1].[2023 Jul]' />
              <field name='[T1].[2023 Jun]' />
              <field name='[T1].[2023 Mar]' />
              <field name='[T1].[2023 May]' />
              <field name='[T1].[2023 Nov]' />
              <field name='[T1].[2023 Oct]' />
              <field name='[T1].[2023 Sep]' />
              <field name='[T1].[2024 Jan]' />
            </group>
          </groups>
          <relation connection='excel-direct.0a8coyt09qphz81gidc8p0sq0fww' name='T1' table='[T1$]' type='table'>
            <columns gridOrigin='A2:CJ64:no:A2:CJ64:0' header='yes' outcome='2'>
              <column datatype='string' name='Data Series' ordinal='0' />
              <column datatype='real' name='Latitude' ordinal='1' />
              <column datatype='real' name='Longitude' ordinal='2' />
              <column datatype='integer' name='2024 Jan' ordinal='3' />
              <column datatype='integer' name='2023 Dec' ordinal='4' />
              <column datatype='integer' name='2023 Nov' ordinal='5' />
              <column datatype='integer' name='2023 Oct' ordinal='6' />
              <column datatype='integer' name='2023 Sep' ordinal='7' />
              <column datatype='integer' name='2023 Aug' ordinal='8' />
              <column datatype='integer' name='2023 Jul' ordinal='9' />
              <column datatype='integer' name='2023 Jun' ordinal='10' />
              <column datatype='integer' name='2023 May' ordinal='11' />
              <column datatype='integer' name='2023 Apr' ordinal='12' />
              <column datatype='integer' name='2023 Mar' ordinal='13' />
              <column datatype='integer' name='2023 Feb' ordinal='14' />
              <column datatype='integer' name='2023 Jan' ordinal='15' />
              <column datatype='integer' name='2022 Dec' ordinal='16' />
              <column datatype='integer' name='2022 Nov' ordinal='17' />
              <column datatype='integer' name='2022 Oct' ordinal='18' />
              <column datatype='integer' name='2022 Sep' ordinal='19' />
              <column datatype='integer' name='2022 Aug' ordinal='20' />
              <column datatype='integer' name='2022 Jul' ordinal='21' />
              <column datatype='integer' name='2022 Jun' ordinal='22' />
              <column datatype='integer' name='2022 May' ordinal='23' />
              <column datatype='integer' name='2022 Apr' ordinal='24' />
              <column datatype='integer' name='2022 Mar' ordinal='25' />
              <column datatype='integer' name='2022 Feb' ordinal='26' />
              <column datatype='integer' name='2022 Jan' ordinal='27' />
              <column datatype='integer' name='2021 Dec' ordinal='28' />
              <column datatype='integer' name='2021 Nov' ordinal='29' />
              <column datatype='integer' name='2021 Oct' ordinal='30' />
              <column datatype='integer' name='2021 Sep' ordinal='31' />
              <column datatype='integer' name='2021 Aug' ordinal='32' />
              <column datatype='integer' name='2021 Jul' ordinal='33' />
              <column datatype='integer' name='2021 Jun' ordinal='34' />
              <column datatype='integer' name='2021 May' ordinal='35' />
              <column datatype='integer' name='2021 Apr' ordinal='36' />
              <column datatype='integer' name='2021 Mar' ordinal='37' />
              <column datatype='integer' name='2021 Feb' ordinal='38' />
              <column datatype='integer' name='2021 Jan' ordinal='39' />
              <column datatype='integer' name='2020 Dec' ordinal='40' />
              <column datatype='integer' name='2020 Nov' ordinal='41' />
              <column datatype='integer' name='2020 Oct' ordinal='42' />
              <column datatype='integer' name='2020 Sep' ordinal='43' />
              <column datatype='integer' name='2020 Aug' ordinal='44' />
              <column datatype='integer' name='2020 Jul' ordinal='45' />
              <column datatype='integer' name='2020 Jun' ordinal='46' />
              <column datatype='integer' name='2020 May' ordinal='47' />
              <column datatype='integer' name='2020 Apr' ordinal='48' />
              <column datatype='integer' name='2020 Mar' ordinal='49' />
              <column datatype='integer' name='2020 Feb' ordinal='50' />
              <column datatype='integer' name='2020 Jan' ordinal='51' />
              <column datatype='integer' name='2019 Dec' ordinal='52' />
              <column datatype='integer' name='2019 Nov' ordinal='53' />
              <column datatype='integer' name='2019 Oct' ordinal='54' />
              <column datatype='integer' name='2019 Sep' ordinal='55' />
              <column datatype='integer' name='2019 Aug' ordinal='56' />
              <column datatype='integer' name='2019 Jul' ordinal='57' />
              <column datatype='integer' name='2019 Jun' ordinal='58' />
              <column datatype='integer' name='2019 May' ordinal='59' />
              <column datatype='integer' name='2019 Apr' ordinal='60' />
              <column datatype='integer' name='2019 Mar' ordinal='61' />
              <column datatype='integer' name='2019 Feb' ordinal='62' />
              <column datatype='integer' name='2019 Jan' ordinal='63' />
              <column datatype='integer' name='2018 Dec' ordinal='64' />
              <column datatype='integer' name='2018 Nov' ordinal='65' />
              <column datatype='integer' name='2018 Oct' ordinal='66' />
              <column datatype='integer' name='2018 Sep' ordinal='67' />
              <column datatype='integer' name='2018 Aug' ordinal='68' />
              <column datatype='integer' name='2018 Jul' ordinal='69' />
              <column datatype='integer' name='2018 Jun' ordinal='70' />
              <column datatype='integer' name='2018 May' ordinal='71' />
              <column datatype='integer' name='2018 Apr' ordinal='72' />
              <column datatype='integer' name='2018 Mar' ordinal='73' />
              <column datatype='integer' name='2018 Feb' ordinal='74' />
              <column datatype='integer' name='2018 Jan' ordinal='75' />
              <column datatype='integer' name='2017 Dec' ordinal='76' />
              <column datatype='integer' name='2017 Nov' ordinal='77' />
              <column datatype='integer' name='2017 Oct' ordinal='78' />
              <column datatype='integer' name='2017 Sep' ordinal='79' />
              <column datatype='integer' name='2017 Aug' ordinal='80' />
              <column datatype='integer' name='2017 Jul' ordinal='81' />
              <column datatype='integer' name='2017 Jun' ordinal='82' />
              <column datatype='integer' name='2017 May' ordinal='83' />
              <column datatype='integer' name='2017 Apr' ordinal='84' />
              <column datatype='integer' name='2017 Mar' ordinal='85' />
              <column datatype='integer' name='2017 Feb' ordinal='86' />
              <column datatype='integer' name='2017 Jan' ordinal='87' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[T1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A2:CJ64:no:A2:CJ64:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Data Series</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Data Series]</local-name>
            <parent-name>[T1]</parent-name>
            <remote-alias>Data Series</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RSG_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[T1_C181C1033DD5423789607F2B290600E8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Latitude]</local-name>
            <parent-name>[T1]</parent-name>
            <remote-alias>Latitude</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[T1_C181C1033DD5423789607F2B290600E8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Longitude]</local-name>
            <parent-name>[T1]</parent-name>
            <remote-alias>Longitude</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[T1_C181C1033DD5423789607F2B290600E8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Pivot Field Names</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Pivot Field Names]</local-name>
            <parent-name>[Pivot]</parent-name>
            <remote-alias>Pivot Field Names</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[T1_C181C1033DD5423789607F2B290600E8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Pivot Field Values</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Pivot Field Values]</local-name>
            <parent-name>[Pivot]</parent-name>
            <remote-alias>Pivot Field Values</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[T1_C181C1033DD5423789607F2B290600E8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Four colours' datatype='string' name='[Calculation_316377939337715712]' role='measure' type='nominal'>
        <calculation class='tableau' formula='IF SUM([Pivot Field Values])&gt;6000000 THEN &apos;Dark Green&apos;&#13;&#10;    ELSEIF SUM([Pivot Field Values])&gt;4000000 THEN &apos;Light Green&apos;&#13;&#10;    ELSEIF SUM([Pivot Field Values])&gt;2000000 THEN &apos;Yellow&apos;&#13;&#10;    ELSE &apos;Red&apos;&#13;&#10;END' />
      </column>
      <column datatype='string' name='[Data Series]' role='dimension' type='nominal' />
      <column aggregation='Avg' datatype='real' name='[Latitude]' role='dimension' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' datatype='real' name='[Longitude]' role='dimension' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='Month Year' datatype='date' name='[Pivot Field Names]' role='dimension' type='ordinal' />
      <column caption='Number of Tourist Arrivals' datatype='integer' name='[Pivot Field Values]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='T1' datatype='table' name='[__tableau_internal_object_id__].[T1_C181C1033DD5423789607F2B290600E8]' role='measure' type='quantitative' />
      <column-instance column='[Data Series]' derivation='None' name='[none:Data Series:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_316377939337715712]' derivation='User' name='[usr:Calculation_316377939337715712:nk]' pivot='key' type='nominal' />
      <column-instance column='[Pivot Field Names]' derivation='Year' name='[yr:Pivot Field Names:ok]' pivot='key' type='ordinal' />
      <group caption='Action (Data Series,YEAR(Month Year))' hidden='true' name='[Action (Data Series,YEAR(Month Year))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Data Series]' />
          <groupfilter function='level-members' level='[yr:Pivot Field Names:ok]' />
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[yr:Pivot Field Names:ok]' type='palette'>
            <map to='#4e79a7'>
              <bucket>2017</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>2021</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>2020</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>2023</bucket>
            </map>
            <map to='#e15759'>
              <bucket>2019</bucket>
            </map>
            <map to='#edc948'>
              <bucket>2022</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>2018</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>2024</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[usr:Calculation_316377939337715712:nk]' type='palette'>
            <map to='#59a14f'>
              <bucket>&quot;Dark Green&quot;</bucket>
            </map>
            <map to='#acffb2'>
              <bucket>&quot;Light Green&quot;</bucket>
            </map>
            <map to='#e1e13e'>
              <bucket>&quot;Yellow&quot;</bucket>
            </map>
            <map to='#f2080b'>
              <bucket>&quot;Red&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Data Series:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;    Canada&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;    Other Markets In Greater China&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;    South Korea&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;    Italy&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;  Others&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Total International Visitor Arrivals By Inbound Tourism Markets&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;    Mauritius&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;    Russian Federation&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;  Greater China&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;  Europe&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;    Egypt&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;    Other Markets In Americas&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;    Sweden&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;    China&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;    Norway&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;    United Kingdom&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;    Bangladesh&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;    Myanmar&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;    Saudi Arabia&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;  Southeast Asia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;    Iran&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;    Other Markets In Southeast Asia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;    USA&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;    Japan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;    Pakistan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;    India&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;    Other Markets In Oceania&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;  Oceania&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;    Belgium &amp; Luxembourg&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;    Netherlands&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;    South Africa (Rep Of)&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;    Germany&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;    Switzerland&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;  West Asia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;    Finland&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;    Other Markets In Europe&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;    Taiwan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;    Indonesia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;    Other Markets In South Asia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;    Israel&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;    Other Markets In West Asia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;    Vietnam&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;    Other Markets In North Asia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;    Spain&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;  Americas&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;  North Asia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;    Brunei Darussalam&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;    New Zealand&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;    United Arab Emirates&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;    Kuwait&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;    Philippines&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;  Africa&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;    France&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;    Hong Kong SAR&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;    Thailand&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;    Denmark&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;    Other Markets In Africa&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;    Sri Lanka&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;  South Asia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;    Australia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;    Malaysia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;    Rep Of Ireland&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Singapore&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='T1' id='T1_C181C1033DD5423789607F2B290600E8'>
            <properties context=''>
              <relation name='Pivot' type='pivot'>
                <columns>
                  <column datatype='date' date-parse-format='yyyy MMM' name='Pivot Field Names' />
                  <column datatype='integer' name='Pivot Field Values' />
                </columns>
                <tag name='Pivot Field Names'>
                  <value name='[2017 Apr]' />
                  <value name='[2017 Aug]' />
                  <value name='[2017 Dec]' />
                  <value name='[2017 Feb]' />
                  <value name='[2017 Jan]' />
                  <value name='[2017 Jul]' />
                  <value name='[2017 Jun]' />
                  <value name='[2017 Mar]' />
                  <value name='[2017 May]' />
                  <value name='[2017 Nov]' />
                  <value name='[2017 Oct]' />
                  <value name='[2017 Sep]' />
                  <value name='[2018 Apr]' />
                  <value name='[2018 Aug]' />
                  <value name='[2018 Dec]' />
                  <value name='[2018 Feb]' />
                  <value name='[2018 Jan]' />
                  <value name='[2018 Jul]' />
                  <value name='[2018 Jun]' />
                  <value name='[2018 Mar]' />
                  <value name='[2018 May]' />
                  <value name='[2018 Nov]' />
                  <value name='[2018 Oct]' />
                  <value name='[2018 Sep]' />
                  <value name='[2019 Apr]' />
                  <value name='[2019 Aug]' />
                  <value name='[2019 Dec]' />
                  <value name='[2019 Feb]' />
                  <value name='[2019 Jan]' />
                  <value name='[2019 Jul]' />
                  <value name='[2019 Jun]' />
                  <value name='[2019 Mar]' />
                  <value name='[2019 May]' />
                  <value name='[2019 Nov]' />
                  <value name='[2019 Oct]' />
                  <value name='[2019 Sep]' />
                  <value name='[2020 Apr]' />
                  <value name='[2020 Aug]' />
                  <value name='[2020 Dec]' />
                  <value name='[2020 Feb]' />
                  <value name='[2020 Jan]' />
                  <value name='[2020 Jul]' />
                  <value name='[2020 Jun]' />
                  <value name='[2020 Mar]' />
                  <value name='[2020 May]' />
                  <value name='[2020 Nov]' />
                  <value name='[2020 Oct]' />
                  <value name='[2020 Sep]' />
                  <value name='[2021 Apr]' />
                  <value name='[2021 Aug]' />
                  <value name='[2021 Dec]' />
                  <value name='[2021 Feb]' />
                  <value name='[2021 Jan]' />
                  <value name='[2021 Jul]' />
                  <value name='[2021 Jun]' />
                  <value name='[2021 Mar]' />
                  <value name='[2021 May]' />
                  <value name='[2021 Nov]' />
                  <value name='[2021 Oct]' />
                  <value name='[2021 Sep]' />
                  <value name='[2022 Apr]' />
                  <value name='[2022 Aug]' />
                  <value name='[2022 Dec]' />
                  <value name='[2022 Feb]' />
                  <value name='[2022 Jan]' />
                  <value name='[2022 Jul]' />
                  <value name='[2022 Jun]' />
                  <value name='[2022 Mar]' />
                  <value name='[2022 May]' />
                  <value name='[2022 Nov]' />
                  <value name='[2022 Oct]' />
                  <value name='[2022 Sep]' />
                  <value name='[2023 Apr]' />
                  <value name='[2023 Aug]' />
                  <value name='[2023 Dec]' />
                  <value name='[2023 Feb]' />
                  <value name='[2023 Jan]' />
                  <value name='[2023 Jul]' />
                  <value name='[2023 Jun]' />
                  <value name='[2023 Mar]' />
                  <value name='[2023 May]' />
                  <value name='[2023 Nov]' />
                  <value name='[2023 Oct]' />
                  <value name='[2023 Sep]' />
                  <value name='[2024 Jan]' />
                </tag>
                <groups>
                  <group name='Pivot Field Values'>
                    <field name='[T1].[2017 Apr]' />
                    <field name='[T1].[2017 Aug]' />
                    <field name='[T1].[2017 Dec]' />
                    <field name='[T1].[2017 Feb]' />
                    <field name='[T1].[2017 Jan]' />
                    <field name='[T1].[2017 Jul]' />
                    <field name='[T1].[2017 Jun]' />
                    <field name='[T1].[2017 Mar]' />
                    <field name='[T1].[2017 May]' />
                    <field name='[T1].[2017 Nov]' />
                    <field name='[T1].[2017 Oct]' />
                    <field name='[T1].[2017 Sep]' />
                    <field name='[T1].[2018 Apr]' />
                    <field name='[T1].[2018 Aug]' />
                    <field name='[T1].[2018 Dec]' />
                    <field name='[T1].[2018 Feb]' />
                    <field name='[T1].[2018 Jan]' />
                    <field name='[T1].[2018 Jul]' />
                    <field name='[T1].[2018 Jun]' />
                    <field name='[T1].[2018 Mar]' />
                    <field name='[T1].[2018 May]' />
                    <field name='[T1].[2018 Nov]' />
                    <field name='[T1].[2018 Oct]' />
                    <field name='[T1].[2018 Sep]' />
                    <field name='[T1].[2019 Apr]' />
                    <field name='[T1].[2019 Aug]' />
                    <field name='[T1].[2019 Dec]' />
                    <field name='[T1].[2019 Feb]' />
                    <field name='[T1].[2019 Jan]' />
                    <field name='[T1].[2019 Jul]' />
                    <field name='[T1].[2019 Jun]' />
                    <field name='[T1].[2019 Mar]' />
                    <field name='[T1].[2019 May]' />
                    <field name='[T1].[2019 Nov]' />
                    <field name='[T1].[2019 Oct]' />
                    <field name='[T1].[2019 Sep]' />
                    <field name='[T1].[2020 Apr]' />
                    <field name='[T1].[2020 Aug]' />
                    <field name='[T1].[2020 Dec]' />
                    <field name='[T1].[2020 Feb]' />
                    <field name='[T1].[2020 Jan]' />
                    <field name='[T1].[2020 Jul]' />
                    <field name='[T1].[2020 Jun]' />
                    <field name='[T1].[2020 Mar]' />
                    <field name='[T1].[2020 May]' />
                    <field name='[T1].[2020 Nov]' />
                    <field name='[T1].[2020 Oct]' />
                    <field name='[T1].[2020 Sep]' />
                    <field name='[T1].[2021 Apr]' />
                    <field name='[T1].[2021 Aug]' />
                    <field name='[T1].[2021 Dec]' />
                    <field name='[T1].[2021 Feb]' />
                    <field name='[T1].[2021 Jan]' />
                    <field name='[T1].[2021 Jul]' />
                    <field name='[T1].[2021 Jun]' />
                    <field name='[T1].[2021 Mar]' />
                    <field name='[T1].[2021 May]' />
                    <field name='[T1].[2021 Nov]' />
                    <field name='[T1].[2021 Oct]' />
                    <field name='[T1].[2021 Sep]' />
                    <field name='[T1].[2022 Apr]' />
                    <field name='[T1].[2022 Aug]' />
                    <field name='[T1].[2022 Dec]' />
                    <field name='[T1].[2022 Feb]' />
                    <field name='[T1].[2022 Jan]' />
                    <field name='[T1].[2022 Jul]' />
                    <field name='[T1].[2022 Jun]' />
                    <field name='[T1].[2022 Mar]' />
                    <field name='[T1].[2022 May]' />
                    <field name='[T1].[2022 Nov]' />
                    <field name='[T1].[2022 Oct]' />
                    <field name='[T1].[2022 Sep]' />
                    <field name='[T1].[2023 Apr]' />
                    <field name='[T1].[2023 Aug]' />
                    <field name='[T1].[2023 Dec]' />
                    <field name='[T1].[2023 Feb]' />
                    <field name='[T1].[2023 Jan]' />
                    <field name='[T1].[2023 Jul]' />
                    <field name='[T1].[2023 Jun]' />
                    <field name='[T1].[2023 Mar]' />
                    <field name='[T1].[2023 May]' />
                    <field name='[T1].[2023 Nov]' />
                    <field name='[T1].[2023 Oct]' />
                    <field name='[T1].[2023 Sep]' />
                    <field name='[T1].[2024 Jan]' />
                  </group>
                </groups>
                <relation connection='excel-direct.0a8coyt09qphz81gidc8p0sq0fww' name='T1' table='[T1$]' type='table'>
                  <columns gridOrigin='A2:CJ64:no:A2:CJ64:0' header='yes' outcome='2'>
                    <column datatype='string' name='Data Series' ordinal='0' />
                    <column datatype='real' name='Latitude' ordinal='1' />
                    <column datatype='real' name='Longitude' ordinal='2' />
                    <column datatype='integer' name='2024 Jan' ordinal='3' />
                    <column datatype='integer' name='2023 Dec' ordinal='4' />
                    <column datatype='integer' name='2023 Nov' ordinal='5' />
                    <column datatype='integer' name='2023 Oct' ordinal='6' />
                    <column datatype='integer' name='2023 Sep' ordinal='7' />
                    <column datatype='integer' name='2023 Aug' ordinal='8' />
                    <column datatype='integer' name='2023 Jul' ordinal='9' />
                    <column datatype='integer' name='2023 Jun' ordinal='10' />
                    <column datatype='integer' name='2023 May' ordinal='11' />
                    <column datatype='integer' name='2023 Apr' ordinal='12' />
                    <column datatype='integer' name='2023 Mar' ordinal='13' />
                    <column datatype='integer' name='2023 Feb' ordinal='14' />
                    <column datatype='integer' name='2023 Jan' ordinal='15' />
                    <column datatype='integer' name='2022 Dec' ordinal='16' />
                    <column datatype='integer' name='2022 Nov' ordinal='17' />
                    <column datatype='integer' name='2022 Oct' ordinal='18' />
                    <column datatype='integer' name='2022 Sep' ordinal='19' />
                    <column datatype='integer' name='2022 Aug' ordinal='20' />
                    <column datatype='integer' name='2022 Jul' ordinal='21' />
                    <column datatype='integer' name='2022 Jun' ordinal='22' />
                    <column datatype='integer' name='2022 May' ordinal='23' />
                    <column datatype='integer' name='2022 Apr' ordinal='24' />
                    <column datatype='integer' name='2022 Mar' ordinal='25' />
                    <column datatype='integer' name='2022 Feb' ordinal='26' />
                    <column datatype='integer' name='2022 Jan' ordinal='27' />
                    <column datatype='integer' name='2021 Dec' ordinal='28' />
                    <column datatype='integer' name='2021 Nov' ordinal='29' />
                    <column datatype='integer' name='2021 Oct' ordinal='30' />
                    <column datatype='integer' name='2021 Sep' ordinal='31' />
                    <column datatype='integer' name='2021 Aug' ordinal='32' />
                    <column datatype='integer' name='2021 Jul' ordinal='33' />
                    <column datatype='integer' name='2021 Jun' ordinal='34' />
                    <column datatype='integer' name='2021 May' ordinal='35' />
                    <column datatype='integer' name='2021 Apr' ordinal='36' />
                    <column datatype='integer' name='2021 Mar' ordinal='37' />
                    <column datatype='integer' name='2021 Feb' ordinal='38' />
                    <column datatype='integer' name='2021 Jan' ordinal='39' />
                    <column datatype='integer' name='2020 Dec' ordinal='40' />
                    <column datatype='integer' name='2020 Nov' ordinal='41' />
                    <column datatype='integer' name='2020 Oct' ordinal='42' />
                    <column datatype='integer' name='2020 Sep' ordinal='43' />
                    <column datatype='integer' name='2020 Aug' ordinal='44' />
                    <column datatype='integer' name='2020 Jul' ordinal='45' />
                    <column datatype='integer' name='2020 Jun' ordinal='46' />
                    <column datatype='integer' name='2020 May' ordinal='47' />
                    <column datatype='integer' name='2020 Apr' ordinal='48' />
                    <column datatype='integer' name='2020 Mar' ordinal='49' />
                    <column datatype='integer' name='2020 Feb' ordinal='50' />
                    <column datatype='integer' name='2020 Jan' ordinal='51' />
                    <column datatype='integer' name='2019 Dec' ordinal='52' />
                    <column datatype='integer' name='2019 Nov' ordinal='53' />
                    <column datatype='integer' name='2019 Oct' ordinal='54' />
                    <column datatype='integer' name='2019 Sep' ordinal='55' />
                    <column datatype='integer' name='2019 Aug' ordinal='56' />
                    <column datatype='integer' name='2019 Jul' ordinal='57' />
                    <column datatype='integer' name='2019 Jun' ordinal='58' />
                    <column datatype='integer' name='2019 May' ordinal='59' />
                    <column datatype='integer' name='2019 Apr' ordinal='60' />
                    <column datatype='integer' name='2019 Mar' ordinal='61' />
                    <column datatype='integer' name='2019 Feb' ordinal='62' />
                    <column datatype='integer' name='2019 Jan' ordinal='63' />
                    <column datatype='integer' name='2018 Dec' ordinal='64' />
                    <column datatype='integer' name='2018 Nov' ordinal='65' />
                    <column datatype='integer' name='2018 Oct' ordinal='66' />
                    <column datatype='integer' name='2018 Sep' ordinal='67' />
                    <column datatype='integer' name='2018 Aug' ordinal='68' />
                    <column datatype='integer' name='2018 Jul' ordinal='69' />
                    <column datatype='integer' name='2018 Jun' ordinal='70' />
                    <column datatype='integer' name='2018 May' ordinal='71' />
                    <column datatype='integer' name='2018 Apr' ordinal='72' />
                    <column datatype='integer' name='2018 Mar' ordinal='73' />
                    <column datatype='integer' name='2018 Feb' ordinal='74' />
                    <column datatype='integer' name='2018 Jan' ordinal='75' />
                    <column datatype='integer' name='2017 Dec' ordinal='76' />
                    <column datatype='integer' name='2017 Nov' ordinal='77' />
                    <column datatype='integer' name='2017 Oct' ordinal='78' />
                    <column datatype='integer' name='2017 Sep' ordinal='79' />
                    <column datatype='integer' name='2017 Aug' ordinal='80' />
                    <column datatype='integer' name='2017 Jul' ordinal='81' />
                    <column datatype='integer' name='2017 Jun' ordinal='82' />
                    <column datatype='integer' name='2017 May' ordinal='83' />
                    <column datatype='integer' name='2017 Apr' ordinal='84' />
                    <column datatype='integer' name='2017 Mar' ordinal='85' />
                    <column datatype='integer' name='2017 Feb' ordinal='86' />
                    <column datatype='integer' name='2017 Jan' ordinal='87' />
                  </columns>
                </relation>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='T1 (outputFile) - Secondary' inline='true' name='federated.0cxg5ce11si89r1gz5ayv1g2irk8' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='outputFile' name='excel-direct.1jixzni0ocd5mf1c8jakn0xofdwd'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/USER/Desktop/NTU Fleximasters/MODULE 1 DATA MANAGEMENT/NTU FM MODULE 1 GROUP PROJECT/outputFile.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Pivot' type='pivot'>
          <columns>
            <column datatype='date' date-parse-format='yyyy MMM' name='Pivot Field Names' />
            <column datatype='integer' name='Pivot Field Values' />
          </columns>
          <tag name='Pivot Field Names'>
            <value name='[2017 Apr]' />
            <value name='[2017 Aug]' />
            <value name='[2017 Dec]' />
            <value name='[2017 Feb]' />
            <value name='[2017 Jan]' />
            <value name='[2017 Jul]' />
            <value name='[2017 Jun]' />
            <value name='[2017 Mar]' />
            <value name='[2017 May]' />
            <value name='[2017 Nov]' />
            <value name='[2017 Oct]' />
            <value name='[2017 Sep]' />
            <value name='[2018 Apr]' />
            <value name='[2018 Aug]' />
            <value name='[2018 Dec]' />
            <value name='[2018 Feb]' />
            <value name='[2018 Jan]' />
            <value name='[2018 Jul]' />
            <value name='[2018 Jun]' />
            <value name='[2018 Mar]' />
            <value name='[2018 May]' />
            <value name='[2018 Nov]' />
            <value name='[2018 Oct]' />
            <value name='[2018 Sep]' />
            <value name='[2019 Apr]' />
            <value name='[2019 Aug]' />
            <value name='[2019 Dec]' />
            <value name='[2019 Feb]' />
            <value name='[2019 Jan]' />
            <value name='[2019 Jul]' />
            <value name='[2019 Jun]' />
            <value name='[2019 Mar]' />
            <value name='[2019 May]' />
            <value name='[2019 Nov]' />
            <value name='[2019 Oct]' />
            <value name='[2019 Sep]' />
            <value name='[2020 Apr]' />
            <value name='[2020 Aug]' />
            <value name='[2020 Dec]' />
            <value name='[2020 Feb]' />
            <value name='[2020 Jan]' />
            <value name='[2020 Jul]' />
            <value name='[2020 Jun]' />
            <value name='[2020 Mar]' />
            <value name='[2020 May]' />
            <value name='[2020 Nov]' />
            <value name='[2020 Oct]' />
            <value name='[2020 Sep]' />
            <value name='[2021 Apr]' />
            <value name='[2021 Aug]' />
            <value name='[2021 Dec]' />
            <value name='[2021 Feb]' />
            <value name='[2021 Jan]' />
            <value name='[2021 Jul]' />
            <value name='[2021 Jun]' />
            <value name='[2021 Mar]' />
            <value name='[2021 May]' />
            <value name='[2021 Nov]' />
            <value name='[2021 Oct]' />
            <value name='[2021 Sep]' />
            <value name='[2022 Apr]' />
            <value name='[2022 Aug]' />
            <value name='[2022 Dec]' />
            <value name='[2022 Feb]' />
            <value name='[2022 Jan]' />
            <value name='[2022 Jul]' />
            <value name='[2022 Jun]' />
            <value name='[2022 Mar]' />
            <value name='[2022 May]' />
            <value name='[2022 Nov]' />
            <value name='[2022 Oct]' />
            <value name='[2022 Sep]' />
            <value name='[2023 Apr]' />
            <value name='[2023 Aug]' />
            <value name='[2023 Dec]' />
            <value name='[2023 Feb]' />
            <value name='[2023 Jan]' />
            <value name='[2023 Jul]' />
            <value name='[2023 Jun]' />
            <value name='[2023 Mar]' />
            <value name='[2023 May]' />
            <value name='[2023 Nov]' />
            <value name='[2023 Oct]' />
            <value name='[2023 Sep]' />
            <value name='[2024 Jan]' />
          </tag>
          <groups>
            <group name='Pivot Field Values'>
              <field name='[T1].[2017 Apr]' />
              <field name='[T1].[2017 Aug]' />
              <field name='[T1].[2017 Dec]' />
              <field name='[T1].[2017 Feb]' />
              <field name='[T1].[2017 Jan]' />
              <field name='[T1].[2017 Jul]' />
              <field name='[T1].[2017 Jun]' />
              <field name='[T1].[2017 Mar]' />
              <field name='[T1].[2017 May]' />
              <field name='[T1].[2017 Nov]' />
              <field name='[T1].[2017 Oct]' />
              <field name='[T1].[2017 Sep]' />
              <field name='[T1].[2018 Apr]' />
              <field name='[T1].[2018 Aug]' />
              <field name='[T1].[2018 Dec]' />
              <field name='[T1].[2018 Feb]' />
              <field name='[T1].[2018 Jan]' />
              <field name='[T1].[2018 Jul]' />
              <field name='[T1].[2018 Jun]' />
              <field name='[T1].[2018 Mar]' />
              <field name='[T1].[2018 May]' />
              <field name='[T1].[2018 Nov]' />
              <field name='[T1].[2018 Oct]' />
              <field name='[T1].[2018 Sep]' />
              <field name='[T1].[2019 Apr]' />
              <field name='[T1].[2019 Aug]' />
              <field name='[T1].[2019 Dec]' />
              <field name='[T1].[2019 Feb]' />
              <field name='[T1].[2019 Jan]' />
              <field name='[T1].[2019 Jul]' />
              <field name='[T1].[2019 Jun]' />
              <field name='[T1].[2019 Mar]' />
              <field name='[T1].[2019 May]' />
              <field name='[T1].[2019 Nov]' />
              <field name='[T1].[2019 Oct]' />
              <field name='[T1].[2019 Sep]' />
              <field name='[T1].[2020 Apr]' />
              <field name='[T1].[2020 Aug]' />
              <field name='[T1].[2020 Dec]' />
              <field name='[T1].[2020 Feb]' />
              <field name='[T1].[2020 Jan]' />
              <field name='[T1].[2020 Jul]' />
              <field name='[T1].[2020 Jun]' />
              <field name='[T1].[2020 Mar]' />
              <field name='[T1].[2020 May]' />
              <field name='[T1].[2020 Nov]' />
              <field name='[T1].[2020 Oct]' />
              <field name='[T1].[2020 Sep]' />
              <field name='[T1].[2021 Apr]' />
              <field name='[T1].[2021 Aug]' />
              <field name='[T1].[2021 Dec]' />
              <field name='[T1].[2021 Feb]' />
              <field name='[T1].[2021 Jan]' />
              <field name='[T1].[2021 Jul]' />
              <field name='[T1].[2021 Jun]' />
              <field name='[T1].[2021 Mar]' />
              <field name='[T1].[2021 May]' />
              <field name='[T1].[2021 Nov]' />
              <field name='[T1].[2021 Oct]' />
              <field name='[T1].[2021 Sep]' />
              <field name='[T1].[2022 Apr]' />
              <field name='[T1].[2022 Aug]' />
              <field name='[T1].[2022 Dec]' />
              <field name='[T1].[2022 Feb]' />
              <field name='[T1].[2022 Jan]' />
              <field name='[T1].[2022 Jul]' />
              <field name='[T1].[2022 Jun]' />
              <field name='[T1].[2022 Mar]' />
              <field name='[T1].[2022 May]' />
              <field name='[T1].[2022 Nov]' />
              <field name='[T1].[2022 Oct]' />
              <field name='[T1].[2022 Sep]' />
              <field name='[T1].[2023 Apr]' />
              <field name='[T1].[2023 Aug]' />
              <field name='[T1].[2023 Dec]' />
              <field name='[T1].[2023 Feb]' />
              <field name='[T1].[2023 Jan]' />
              <field name='[T1].[2023 Jul]' />
              <field name='[T1].[2023 Jun]' />
              <field name='[T1].[2023 Mar]' />
              <field name='[T1].[2023 May]' />
              <field name='[T1].[2023 Nov]' />
              <field name='[T1].[2023 Oct]' />
              <field name='[T1].[2023 Sep]' />
              <field name='[T1].[2024 Jan]' />
            </group>
          </groups>
          <relation connection='excel-direct.1jixzni0ocd5mf1c8jakn0xofdwd' name='T1' table='[T1$]' type='table'>
            <columns gridOrigin='A2:CJ64:no:A2:CJ64:0' header='yes' outcome='2'>
              <column datatype='string' name='Data Series' ordinal='0' />
              <column datatype='real' name='Latitude' ordinal='1' />
              <column datatype='real' name='Longitude' ordinal='2' />
              <column datatype='integer' name='2024 Jan' ordinal='3' />
              <column datatype='integer' name='2023 Dec' ordinal='4' />
              <column datatype='integer' name='2023 Nov' ordinal='5' />
              <column datatype='integer' name='2023 Oct' ordinal='6' />
              <column datatype='integer' name='2023 Sep' ordinal='7' />
              <column datatype='integer' name='2023 Aug' ordinal='8' />
              <column datatype='integer' name='2023 Jul' ordinal='9' />
              <column datatype='integer' name='2023 Jun' ordinal='10' />
              <column datatype='integer' name='2023 May' ordinal='11' />
              <column datatype='integer' name='2023 Apr' ordinal='12' />
              <column datatype='integer' name='2023 Mar' ordinal='13' />
              <column datatype='integer' name='2023 Feb' ordinal='14' />
              <column datatype='integer' name='2023 Jan' ordinal='15' />
              <column datatype='integer' name='2022 Dec' ordinal='16' />
              <column datatype='integer' name='2022 Nov' ordinal='17' />
              <column datatype='integer' name='2022 Oct' ordinal='18' />
              <column datatype='integer' name='2022 Sep' ordinal='19' />
              <column datatype='integer' name='2022 Aug' ordinal='20' />
              <column datatype='integer' name='2022 Jul' ordinal='21' />
              <column datatype='integer' name='2022 Jun' ordinal='22' />
              <column datatype='integer' name='2022 May' ordinal='23' />
              <column datatype='integer' name='2022 Apr' ordinal='24' />
              <column datatype='integer' name='2022 Mar' ordinal='25' />
              <column datatype='integer' name='2022 Feb' ordinal='26' />
              <column datatype='integer' name='2022 Jan' ordinal='27' />
              <column datatype='integer' name='2021 Dec' ordinal='28' />
              <column datatype='integer' name='2021 Nov' ordinal='29' />
              <column datatype='integer' name='2021 Oct' ordinal='30' />
              <column datatype='integer' name='2021 Sep' ordinal='31' />
              <column datatype='integer' name='2021 Aug' ordinal='32' />
              <column datatype='integer' name='2021 Jul' ordinal='33' />
              <column datatype='integer' name='2021 Jun' ordinal='34' />
              <column datatype='integer' name='2021 May' ordinal='35' />
              <column datatype='integer' name='2021 Apr' ordinal='36' />
              <column datatype='integer' name='2021 Mar' ordinal='37' />
              <column datatype='integer' name='2021 Feb' ordinal='38' />
              <column datatype='integer' name='2021 Jan' ordinal='39' />
              <column datatype='integer' name='2020 Dec' ordinal='40' />
              <column datatype='integer' name='2020 Nov' ordinal='41' />
              <column datatype='integer' name='2020 Oct' ordinal='42' />
              <column datatype='integer' name='2020 Sep' ordinal='43' />
              <column datatype='integer' name='2020 Aug' ordinal='44' />
              <column datatype='integer' name='2020 Jul' ordinal='45' />
              <column datatype='integer' name='2020 Jun' ordinal='46' />
              <column datatype='integer' name='2020 May' ordinal='47' />
              <column datatype='integer' name='2020 Apr' ordinal='48' />
              <column datatype='integer' name='2020 Mar' ordinal='49' />
              <column datatype='integer' name='2020 Feb' ordinal='50' />
              <column datatype='integer' name='2020 Jan' ordinal='51' />
              <column datatype='integer' name='2019 Dec' ordinal='52' />
              <column datatype='integer' name='2019 Nov' ordinal='53' />
              <column datatype='integer' name='2019 Oct' ordinal='54' />
              <column datatype='integer' name='2019 Sep' ordinal='55' />
              <column datatype='integer' name='2019 Aug' ordinal='56' />
              <column datatype='integer' name='2019 Jul' ordinal='57' />
              <column datatype='integer' name='2019 Jun' ordinal='58' />
              <column datatype='integer' name='2019 May' ordinal='59' />
              <column datatype='integer' name='2019 Apr' ordinal='60' />
              <column datatype='integer' name='2019 Mar' ordinal='61' />
              <column datatype='integer' name='2019 Feb' ordinal='62' />
              <column datatype='integer' name='2019 Jan' ordinal='63' />
              <column datatype='integer' name='2018 Dec' ordinal='64' />
              <column datatype='integer' name='2018 Nov' ordinal='65' />
              <column datatype='integer' name='2018 Oct' ordinal='66' />
              <column datatype='integer' name='2018 Sep' ordinal='67' />
              <column datatype='integer' name='2018 Aug' ordinal='68' />
              <column datatype='integer' name='2018 Jul' ordinal='69' />
              <column datatype='integer' name='2018 Jun' ordinal='70' />
              <column datatype='integer' name='2018 May' ordinal='71' />
              <column datatype='integer' name='2018 Apr' ordinal='72' />
              <column datatype='integer' name='2018 Mar' ordinal='73' />
              <column datatype='integer' name='2018 Feb' ordinal='74' />
              <column datatype='integer' name='2018 Jan' ordinal='75' />
              <column datatype='integer' name='2017 Dec' ordinal='76' />
              <column datatype='integer' name='2017 Nov' ordinal='77' />
              <column datatype='integer' name='2017 Oct' ordinal='78' />
              <column datatype='integer' name='2017 Sep' ordinal='79' />
              <column datatype='integer' name='2017 Aug' ordinal='80' />
              <column datatype='integer' name='2017 Jul' ordinal='81' />
              <column datatype='integer' name='2017 Jun' ordinal='82' />
              <column datatype='integer' name='2017 May' ordinal='83' />
              <column datatype='integer' name='2017 Apr' ordinal='84' />
              <column datatype='integer' name='2017 Mar' ordinal='85' />
              <column datatype='integer' name='2017 Feb' ordinal='86' />
              <column datatype='integer' name='2017 Jan' ordinal='87' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Pivot' type='pivot'>
          <columns>
            <column datatype='date' date-parse-format='yyyy MMM' name='Pivot Field Names' />
            <column datatype='integer' name='Pivot Field Values' />
          </columns>
          <tag name='Pivot Field Names'>
            <value name='[2017 Apr]' />
            <value name='[2017 Aug]' />
            <value name='[2017 Dec]' />
            <value name='[2017 Feb]' />
            <value name='[2017 Jan]' />
            <value name='[2017 Jul]' />
            <value name='[2017 Jun]' />
            <value name='[2017 Mar]' />
            <value name='[2017 May]' />
            <value name='[2017 Nov]' />
            <value name='[2017 Oct]' />
            <value name='[2017 Sep]' />
            <value name='[2018 Apr]' />
            <value name='[2018 Aug]' />
            <value name='[2018 Dec]' />
            <value name='[2018 Feb]' />
            <value name='[2018 Jan]' />
            <value name='[2018 Jul]' />
            <value name='[2018 Jun]' />
            <value name='[2018 Mar]' />
            <value name='[2018 May]' />
            <value name='[2018 Nov]' />
            <value name='[2018 Oct]' />
            <value name='[2018 Sep]' />
            <value name='[2019 Apr]' />
            <value name='[2019 Aug]' />
            <value name='[2019 Dec]' />
            <value name='[2019 Feb]' />
            <value name='[2019 Jan]' />
            <value name='[2019 Jul]' />
            <value name='[2019 Jun]' />
            <value name='[2019 Mar]' />
            <value name='[2019 May]' />
            <value name='[2019 Nov]' />
            <value name='[2019 Oct]' />
            <value name='[2019 Sep]' />
            <value name='[2020 Apr]' />
            <value name='[2020 Aug]' />
            <value name='[2020 Dec]' />
            <value name='[2020 Feb]' />
            <value name='[2020 Jan]' />
            <value name='[2020 Jul]' />
            <value name='[2020 Jun]' />
            <value name='[2020 Mar]' />
            <value name='[2020 May]' />
            <value name='[2020 Nov]' />
            <value name='[2020 Oct]' />
            <value name='[2020 Sep]' />
            <value name='[2021 Apr]' />
            <value name='[2021 Aug]' />
            <value name='[2021 Dec]' />
            <value name='[2021 Feb]' />
            <value name='[2021 Jan]' />
            <value name='[2021 Jul]' />
            <value name='[2021 Jun]' />
            <value name='[2021 Mar]' />
            <value name='[2021 May]' />
            <value name='[2021 Nov]' />
            <value name='[2021 Oct]' />
            <value name='[2021 Sep]' />
            <value name='[2022 Apr]' />
            <value name='[2022 Aug]' />
            <value name='[2022 Dec]' />
            <value name='[2022 Feb]' />
            <value name='[2022 Jan]' />
            <value name='[2022 Jul]' />
            <value name='[2022 Jun]' />
            <value name='[2022 Mar]' />
            <value name='[2022 May]' />
            <value name='[2022 Nov]' />
            <value name='[2022 Oct]' />
            <value name='[2022 Sep]' />
            <value name='[2023 Apr]' />
            <value name='[2023 Aug]' />
            <value name='[2023 Dec]' />
            <value name='[2023 Feb]' />
            <value name='[2023 Jan]' />
            <value name='[2023 Jul]' />
            <value name='[2023 Jun]' />
            <value name='[2023 Mar]' />
            <value name='[2023 May]' />
            <value name='[2023 Nov]' />
            <value name='[2023 Oct]' />
            <value name='[2023 Sep]' />
            <value name='[2024 Jan]' />
          </tag>
          <groups>
            <group name='Pivot Field Values'>
              <field name='[T1].[2017 Apr]' />
              <field name='[T1].[2017 Aug]' />
              <field name='[T1].[2017 Dec]' />
              <field name='[T1].[2017 Feb]' />
              <field name='[T1].[2017 Jan]' />
              <field name='[T1].[2017 Jul]' />
              <field name='[T1].[2017 Jun]' />
              <field name='[T1].[2017 Mar]' />
              <field name='[T1].[2017 May]' />
              <field name='[T1].[2017 Nov]' />
              <field name='[T1].[2017 Oct]' />
              <field name='[T1].[2017 Sep]' />
              <field name='[T1].[2018 Apr]' />
              <field name='[T1].[2018 Aug]' />
              <field name='[T1].[2018 Dec]' />
              <field name='[T1].[2018 Feb]' />
              <field name='[T1].[2018 Jan]' />
              <field name='[T1].[2018 Jul]' />
              <field name='[T1].[2018 Jun]' />
              <field name='[T1].[2018 Mar]' />
              <field name='[T1].[2018 May]' />
              <field name='[T1].[2018 Nov]' />
              <field name='[T1].[2018 Oct]' />
              <field name='[T1].[2018 Sep]' />
              <field name='[T1].[2019 Apr]' />
              <field name='[T1].[2019 Aug]' />
              <field name='[T1].[2019 Dec]' />
              <field name='[T1].[2019 Feb]' />
              <field name='[T1].[2019 Jan]' />
              <field name='[T1].[2019 Jul]' />
              <field name='[T1].[2019 Jun]' />
              <field name='[T1].[2019 Mar]' />
              <field name='[T1].[2019 May]' />
              <field name='[T1].[2019 Nov]' />
              <field name='[T1].[2019 Oct]' />
              <field name='[T1].[2019 Sep]' />
              <field name='[T1].[2020 Apr]' />
              <field name='[T1].[2020 Aug]' />
              <field name='[T1].[2020 Dec]' />
              <field name='[T1].[2020 Feb]' />
              <field name='[T1].[2020 Jan]' />
              <field name='[T1].[2020 Jul]' />
              <field name='[T1].[2020 Jun]' />
              <field name='[T1].[2020 Mar]' />
              <field name='[T1].[2020 May]' />
              <field name='[T1].[2020 Nov]' />
              <field name='[T1].[2020 Oct]' />
              <field name='[T1].[2020 Sep]' />
              <field name='[T1].[2021 Apr]' />
              <field name='[T1].[2021 Aug]' />
              <field name='[T1].[2021 Dec]' />
              <field name='[T1].[2021 Feb]' />
              <field name='[T1].[2021 Jan]' />
              <field name='[T1].[2021 Jul]' />
              <field name='[T1].[2021 Jun]' />
              <field name='[T1].[2021 Mar]' />
              <field name='[T1].[2021 May]' />
              <field name='[T1].[2021 Nov]' />
              <field name='[T1].[2021 Oct]' />
              <field name='[T1].[2021 Sep]' />
              <field name='[T1].[2022 Apr]' />
              <field name='[T1].[2022 Aug]' />
              <field name='[T1].[2022 Dec]' />
              <field name='[T1].[2022 Feb]' />
              <field name='[T1].[2022 Jan]' />
              <field name='[T1].[2022 Jul]' />
              <field name='[T1].[2022 Jun]' />
              <field name='[T1].[2022 Mar]' />
              <field name='[T1].[2022 May]' />
              <field name='[T1].[2022 Nov]' />
              <field name='[T1].[2022 Oct]' />
              <field name='[T1].[2022 Sep]' />
              <field name='[T1].[2023 Apr]' />
              <field name='[T1].[2023 Aug]' />
              <field name='[T1].[2023 Dec]' />
              <field name='[T1].[2023 Feb]' />
              <field name='[T1].[2023 Jan]' />
              <field name='[T1].[2023 Jul]' />
              <field name='[T1].[2023 Jun]' />
              <field name='[T1].[2023 Mar]' />
              <field name='[T1].[2023 May]' />
              <field name='[T1].[2023 Nov]' />
              <field name='[T1].[2023 Oct]' />
              <field name='[T1].[2023 Sep]' />
              <field name='[T1].[2024 Jan]' />
            </group>
          </groups>
          <relation connection='excel-direct.1jixzni0ocd5mf1c8jakn0xofdwd' name='T1' table='[T1$]' type='table'>
            <columns gridOrigin='A2:CJ64:no:A2:CJ64:0' header='yes' outcome='2'>
              <column datatype='string' name='Data Series' ordinal='0' />
              <column datatype='real' name='Latitude' ordinal='1' />
              <column datatype='real' name='Longitude' ordinal='2' />
              <column datatype='integer' name='2024 Jan' ordinal='3' />
              <column datatype='integer' name='2023 Dec' ordinal='4' />
              <column datatype='integer' name='2023 Nov' ordinal='5' />
              <column datatype='integer' name='2023 Oct' ordinal='6' />
              <column datatype='integer' name='2023 Sep' ordinal='7' />
              <column datatype='integer' name='2023 Aug' ordinal='8' />
              <column datatype='integer' name='2023 Jul' ordinal='9' />
              <column datatype='integer' name='2023 Jun' ordinal='10' />
              <column datatype='integer' name='2023 May' ordinal='11' />
              <column datatype='integer' name='2023 Apr' ordinal='12' />
              <column datatype='integer' name='2023 Mar' ordinal='13' />
              <column datatype='integer' name='2023 Feb' ordinal='14' />
              <column datatype='integer' name='2023 Jan' ordinal='15' />
              <column datatype='integer' name='2022 Dec' ordinal='16' />
              <column datatype='integer' name='2022 Nov' ordinal='17' />
              <column datatype='integer' name='2022 Oct' ordinal='18' />
              <column datatype='integer' name='2022 Sep' ordinal='19' />
              <column datatype='integer' name='2022 Aug' ordinal='20' />
              <column datatype='integer' name='2022 Jul' ordinal='21' />
              <column datatype='integer' name='2022 Jun' ordinal='22' />
              <column datatype='integer' name='2022 May' ordinal='23' />
              <column datatype='integer' name='2022 Apr' ordinal='24' />
              <column datatype='integer' name='2022 Mar' ordinal='25' />
              <column datatype='integer' name='2022 Feb' ordinal='26' />
              <column datatype='integer' name='2022 Jan' ordinal='27' />
              <column datatype='integer' name='2021 Dec' ordinal='28' />
              <column datatype='integer' name='2021 Nov' ordinal='29' />
              <column datatype='integer' name='2021 Oct' ordinal='30' />
              <column datatype='integer' name='2021 Sep' ordinal='31' />
              <column datatype='integer' name='2021 Aug' ordinal='32' />
              <column datatype='integer' name='2021 Jul' ordinal='33' />
              <column datatype='integer' name='2021 Jun' ordinal='34' />
              <column datatype='integer' name='2021 May' ordinal='35' />
              <column datatype='integer' name='2021 Apr' ordinal='36' />
              <column datatype='integer' name='2021 Mar' ordinal='37' />
              <column datatype='integer' name='2021 Feb' ordinal='38' />
              <column datatype='integer' name='2021 Jan' ordinal='39' />
              <column datatype='integer' name='2020 Dec' ordinal='40' />
              <column datatype='integer' name='2020 Nov' ordinal='41' />
              <column datatype='integer' name='2020 Oct' ordinal='42' />
              <column datatype='integer' name='2020 Sep' ordinal='43' />
              <column datatype='integer' name='2020 Aug' ordinal='44' />
              <column datatype='integer' name='2020 Jul' ordinal='45' />
              <column datatype='integer' name='2020 Jun' ordinal='46' />
              <column datatype='integer' name='2020 May' ordinal='47' />
              <column datatype='integer' name='2020 Apr' ordinal='48' />
              <column datatype='integer' name='2020 Mar' ordinal='49' />
              <column datatype='integer' name='2020 Feb' ordinal='50' />
              <column datatype='integer' name='2020 Jan' ordinal='51' />
              <column datatype='integer' name='2019 Dec' ordinal='52' />
              <column datatype='integer' name='2019 Nov' ordinal='53' />
              <column datatype='integer' name='2019 Oct' ordinal='54' />
              <column datatype='integer' name='2019 Sep' ordinal='55' />
              <column datatype='integer' name='2019 Aug' ordinal='56' />
              <column datatype='integer' name='2019 Jul' ordinal='57' />
              <column datatype='integer' name='2019 Jun' ordinal='58' />
              <column datatype='integer' name='2019 May' ordinal='59' />
              <column datatype='integer' name='2019 Apr' ordinal='60' />
              <column datatype='integer' name='2019 Mar' ordinal='61' />
              <column datatype='integer' name='2019 Feb' ordinal='62' />
              <column datatype='integer' name='2019 Jan' ordinal='63' />
              <column datatype='integer' name='2018 Dec' ordinal='64' />
              <column datatype='integer' name='2018 Nov' ordinal='65' />
              <column datatype='integer' name='2018 Oct' ordinal='66' />
              <column datatype='integer' name='2018 Sep' ordinal='67' />
              <column datatype='integer' name='2018 Aug' ordinal='68' />
              <column datatype='integer' name='2018 Jul' ordinal='69' />
              <column datatype='integer' name='2018 Jun' ordinal='70' />
              <column datatype='integer' name='2018 May' ordinal='71' />
              <column datatype='integer' name='2018 Apr' ordinal='72' />
              <column datatype='integer' name='2018 Mar' ordinal='73' />
              <column datatype='integer' name='2018 Feb' ordinal='74' />
              <column datatype='integer' name='2018 Jan' ordinal='75' />
              <column datatype='integer' name='2017 Dec' ordinal='76' />
              <column datatype='integer' name='2017 Nov' ordinal='77' />
              <column datatype='integer' name='2017 Oct' ordinal='78' />
              <column datatype='integer' name='2017 Sep' ordinal='79' />
              <column datatype='integer' name='2017 Aug' ordinal='80' />
              <column datatype='integer' name='2017 Jul' ordinal='81' />
              <column datatype='integer' name='2017 Jun' ordinal='82' />
              <column datatype='integer' name='2017 May' ordinal='83' />
              <column datatype='integer' name='2017 Apr' ordinal='84' />
              <column datatype='integer' name='2017 Mar' ordinal='85' />
              <column datatype='integer' name='2017 Feb' ordinal='86' />
              <column datatype='integer' name='2017 Jan' ordinal='87' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[T1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A2:CJ64:no:A2:CJ64:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Data Series</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Data Series]</local-name>
            <parent-name>[T1]</parent-name>
            <remote-alias>Data Series</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RSG_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[T1_5A3870E68B7C4AB4A82BDAE2FE38791F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Latitude]</local-name>
            <parent-name>[T1]</parent-name>
            <remote-alias>Latitude</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[T1_5A3870E68B7C4AB4A82BDAE2FE38791F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Longitude]</local-name>
            <parent-name>[T1]</parent-name>
            <remote-alias>Longitude</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[T1_5A3870E68B7C4AB4A82BDAE2FE38791F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Pivot Field Names</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Pivot Field Names]</local-name>
            <parent-name>[Pivot]</parent-name>
            <remote-alias>Pivot Field Names</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[T1_5A3870E68B7C4AB4A82BDAE2FE38791F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Pivot Field Values</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Pivot Field Values]</local-name>
            <parent-name>[Pivot]</parent-name>
            <remote-alias>Pivot Field Values</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[T1_5A3870E68B7C4AB4A82BDAE2FE38791F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Four colours (Tourist Numbers)' datatype='string' name='[Calculation_2712011464437596160]' role='measure' type='nominal'>
        <calculation class='tableau' formula='IF SUM([Pivot Field Values])&gt;6000000 THEN &apos;Dark Green&apos;&#13;&#10;    ELSEIF SUM([Pivot Field Values])&gt;4000000 THEN &apos;Light Green&apos;&#13;&#10;    ELSEIF SUM([Pivot Field Values])&gt;2000000 THEN &apos;Yellow&apos;&#13;&#10;    ELSE &apos;Red&apos;&#13;&#10;END' />
      </column>
      <column datatype='string' name='[Data Series]' role='dimension' type='nominal' />
      <column aggregation='Avg' datatype='real' name='[Latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' datatype='real' name='[Longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='Month Year' datatype='date' name='[Pivot Field Names]' role='dimension' type='ordinal' />
      <column caption='Number of Tourist Arrivals' datatype='integer' name='[Pivot Field Values]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='T1' datatype='table' name='[__tableau_internal_object_id__].[T1_5A3870E68B7C4AB4A82BDAE2FE38791F]' role='measure' type='quantitative' />
      <column-instance column='[Pivot Field Values]' derivation='Sum' name='[cum:sum:Pivot Field Values:qk]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-type='Rows' type='CumTotal' />
      </column-instance>
      <column-instance column='[Data Series]' derivation='None' name='[none:Data Series:nk]' pivot='key' type='nominal' />
      <column-instance column='[Pivot Field Values]' derivation='Sum' name='[sum:Pivot Field Values:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_2712011464437596160]' derivation='User' name='[usr:Calculation_2712011464437596160:nk]' pivot='key' type='nominal' />
      <column-instance column='[Pivot Field Names]' derivation='Year' name='[yr:Pivot Field Names:ok]' pivot='key' type='ordinal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0cxg5ce11si89r1gz5ayv1g2irk8].[cum:sum:Pivot Field Values:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0cxg5ce11si89r1gz5ayv1g2irk8].[sum:Pivot Field Values:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[yr:Pivot Field Names:ok]' type='palette'>
            <map to='#4e79a7'>
              <bucket>2017</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>2021</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>2020</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>2023</bucket>
            </map>
            <map to='#e15759'>
              <bucket>2019</bucket>
            </map>
            <map to='#edc948'>
              <bucket>2022</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>2018</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>2024</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Data Series:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;    Finland&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;    Other Markets In Greater China&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;    Australia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;    Mauritius&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;    South Africa (Rep Of)&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;  Africa&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;    Canada&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;    Japan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;    Sweden&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;  North Asia&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;    Indonesia&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;  Greater China&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;    Norway&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;    Other Markets In Southeast Asia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;    Thailand&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;    France&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;    Other Markets In North Asia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;    South Korea&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;    Hong Kong SAR&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;    Myanmar&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;    Switzerland&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;  West Asia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;    Kuwait&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;    Russian Federation&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;    Bangladesh&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;    Italy&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;    Philippines&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;    United Arab Emirates&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;  South Asia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;    Denmark&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;    Other Markets In Africa&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;    Other Markets In West Asia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Total International Visitor Arrivals By Inbound Tourism Markets&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;    Iran&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;    United Kingdom&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;  Others&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;    Other Markets In Americas&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;    Rep Of Ireland&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;    Vietnam&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;    Other Markets In Europe&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;    Saudi Arabia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;    India&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;    Netherlands&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;    Other Markets In Oceania&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;  Europe&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;    Malaysia&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;  Oceania&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;    Egypt&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;    Belgium &amp; Luxembourg&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;    China&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;    Spain&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;  Americas&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;    Israel&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;    Pakistan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;    USA&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;    New Zealand&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;    Other Markets In South Asia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;    Taiwan&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;  Southeast Asia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;    Brunei Darussalam&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;    Germany&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;    Sri Lanka&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[usr:Calculation_2712011464437596160:nk]' type='palette'>
            <map to='#59a14f'>
              <bucket>&quot;Dark Green&quot;</bucket>
            </map>
            <map to='#ccf2af'>
              <bucket>&quot;Light Green&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Red&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Yellow&quot;</bucket>
            </map>
            <map to='#ffffff'>
              <bucket>&quot;White&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Singapore&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='T1' id='T1_5A3870E68B7C4AB4A82BDAE2FE38791F'>
            <properties context=''>
              <relation name='Pivot' type='pivot'>
                <columns>
                  <column datatype='date' date-parse-format='yyyy MMM' name='Pivot Field Names' />
                  <column datatype='integer' name='Pivot Field Values' />
                </columns>
                <tag name='Pivot Field Names'>
                  <value name='[2017 Apr]' />
                  <value name='[2017 Aug]' />
                  <value name='[2017 Dec]' />
                  <value name='[2017 Feb]' />
                  <value name='[2017 Jan]' />
                  <value name='[2017 Jul]' />
                  <value name='[2017 Jun]' />
                  <value name='[2017 Mar]' />
                  <value name='[2017 May]' />
                  <value name='[2017 Nov]' />
                  <value name='[2017 Oct]' />
                  <value name='[2017 Sep]' />
                  <value name='[2018 Apr]' />
                  <value name='[2018 Aug]' />
                  <value name='[2018 Dec]' />
                  <value name='[2018 Feb]' />
                  <value name='[2018 Jan]' />
                  <value name='[2018 Jul]' />
                  <value name='[2018 Jun]' />
                  <value name='[2018 Mar]' />
                  <value name='[2018 May]' />
                  <value name='[2018 Nov]' />
                  <value name='[2018 Oct]' />
                  <value name='[2018 Sep]' />
                  <value name='[2019 Apr]' />
                  <value name='[2019 Aug]' />
                  <value name='[2019 Dec]' />
                  <value name='[2019 Feb]' />
                  <value name='[2019 Jan]' />
                  <value name='[2019 Jul]' />
                  <value name='[2019 Jun]' />
                  <value name='[2019 Mar]' />
                  <value name='[2019 May]' />
                  <value name='[2019 Nov]' />
                  <value name='[2019 Oct]' />
                  <value name='[2019 Sep]' />
                  <value name='[2020 Apr]' />
                  <value name='[2020 Aug]' />
                  <value name='[2020 Dec]' />
                  <value name='[2020 Feb]' />
                  <value name='[2020 Jan]' />
                  <value name='[2020 Jul]' />
                  <value name='[2020 Jun]' />
                  <value name='[2020 Mar]' />
                  <value name='[2020 May]' />
                  <value name='[2020 Nov]' />
                  <value name='[2020 Oct]' />
                  <value name='[2020 Sep]' />
                  <value name='[2021 Apr]' />
                  <value name='[2021 Aug]' />
                  <value name='[2021 Dec]' />
                  <value name='[2021 Feb]' />
                  <value name='[2021 Jan]' />
                  <value name='[2021 Jul]' />
                  <value name='[2021 Jun]' />
                  <value name='[2021 Mar]' />
                  <value name='[2021 May]' />
                  <value name='[2021 Nov]' />
                  <value name='[2021 Oct]' />
                  <value name='[2021 Sep]' />
                  <value name='[2022 Apr]' />
                  <value name='[2022 Aug]' />
                  <value name='[2022 Dec]' />
                  <value name='[2022 Feb]' />
                  <value name='[2022 Jan]' />
                  <value name='[2022 Jul]' />
                  <value name='[2022 Jun]' />
                  <value name='[2022 Mar]' />
                  <value name='[2022 May]' />
                  <value name='[2022 Nov]' />
                  <value name='[2022 Oct]' />
                  <value name='[2022 Sep]' />
                  <value name='[2023 Apr]' />
                  <value name='[2023 Aug]' />
                  <value name='[2023 Dec]' />
                  <value name='[2023 Feb]' />
                  <value name='[2023 Jan]' />
                  <value name='[2023 Jul]' />
                  <value name='[2023 Jun]' />
                  <value name='[2023 Mar]' />
                  <value name='[2023 May]' />
                  <value name='[2023 Nov]' />
                  <value name='[2023 Oct]' />
                  <value name='[2023 Sep]' />
                  <value name='[2024 Jan]' />
                </tag>
                <groups>
                  <group name='Pivot Field Values'>
                    <field name='[T1].[2017 Apr]' />
                    <field name='[T1].[2017 Aug]' />
                    <field name='[T1].[2017 Dec]' />
                    <field name='[T1].[2017 Feb]' />
                    <field name='[T1].[2017 Jan]' />
                    <field name='[T1].[2017 Jul]' />
                    <field name='[T1].[2017 Jun]' />
                    <field name='[T1].[2017 Mar]' />
                    <field name='[T1].[2017 May]' />
                    <field name='[T1].[2017 Nov]' />
                    <field name='[T1].[2017 Oct]' />
                    <field name='[T1].[2017 Sep]' />
                    <field name='[T1].[2018 Apr]' />
                    <field name='[T1].[2018 Aug]' />
                    <field name='[T1].[2018 Dec]' />
                    <field name='[T1].[2018 Feb]' />
                    <field name='[T1].[2018 Jan]' />
                    <field name='[T1].[2018 Jul]' />
                    <field name='[T1].[2018 Jun]' />
                    <field name='[T1].[2018 Mar]' />
                    <field name='[T1].[2018 May]' />
                    <field name='[T1].[2018 Nov]' />
                    <field name='[T1].[2018 Oct]' />
                    <field name='[T1].[2018 Sep]' />
                    <field name='[T1].[2019 Apr]' />
                    <field name='[T1].[2019 Aug]' />
                    <field name='[T1].[2019 Dec]' />
                    <field name='[T1].[2019 Feb]' />
                    <field name='[T1].[2019 Jan]' />
                    <field name='[T1].[2019 Jul]' />
                    <field name='[T1].[2019 Jun]' />
                    <field name='[T1].[2019 Mar]' />
                    <field name='[T1].[2019 May]' />
                    <field name='[T1].[2019 Nov]' />
                    <field name='[T1].[2019 Oct]' />
                    <field name='[T1].[2019 Sep]' />
                    <field name='[T1].[2020 Apr]' />
                    <field name='[T1].[2020 Aug]' />
                    <field name='[T1].[2020 Dec]' />
                    <field name='[T1].[2020 Feb]' />
                    <field name='[T1].[2020 Jan]' />
                    <field name='[T1].[2020 Jul]' />
                    <field name='[T1].[2020 Jun]' />
                    <field name='[T1].[2020 Mar]' />
                    <field name='[T1].[2020 May]' />
                    <field name='[T1].[2020 Nov]' />
                    <field name='[T1].[2020 Oct]' />
                    <field name='[T1].[2020 Sep]' />
                    <field name='[T1].[2021 Apr]' />
                    <field name='[T1].[2021 Aug]' />
                    <field name='[T1].[2021 Dec]' />
                    <field name='[T1].[2021 Feb]' />
                    <field name='[T1].[2021 Jan]' />
                    <field name='[T1].[2021 Jul]' />
                    <field name='[T1].[2021 Jun]' />
                    <field name='[T1].[2021 Mar]' />
                    <field name='[T1].[2021 May]' />
                    <field name='[T1].[2021 Nov]' />
                    <field name='[T1].[2021 Oct]' />
                    <field name='[T1].[2021 Sep]' />
                    <field name='[T1].[2022 Apr]' />
                    <field name='[T1].[2022 Aug]' />
                    <field name='[T1].[2022 Dec]' />
                    <field name='[T1].[2022 Feb]' />
                    <field name='[T1].[2022 Jan]' />
                    <field name='[T1].[2022 Jul]' />
                    <field name='[T1].[2022 Jun]' />
                    <field name='[T1].[2022 Mar]' />
                    <field name='[T1].[2022 May]' />
                    <field name='[T1].[2022 Nov]' />
                    <field name='[T1].[2022 Oct]' />
                    <field name='[T1].[2022 Sep]' />
                    <field name='[T1].[2023 Apr]' />
                    <field name='[T1].[2023 Aug]' />
                    <field name='[T1].[2023 Dec]' />
                    <field name='[T1].[2023 Feb]' />
                    <field name='[T1].[2023 Jan]' />
                    <field name='[T1].[2023 Jul]' />
                    <field name='[T1].[2023 Jun]' />
                    <field name='[T1].[2023 Mar]' />
                    <field name='[T1].[2023 May]' />
                    <field name='[T1].[2023 Nov]' />
                    <field name='[T1].[2023 Oct]' />
                    <field name='[T1].[2023 Sep]' />
                    <field name='[T1].[2024 Jan]' />
                  </group>
                </groups>
                <relation connection='excel-direct.1jixzni0ocd5mf1c8jakn0xofdwd' name='T1' table='[T1$]' type='table'>
                  <columns gridOrigin='A2:CJ64:no:A2:CJ64:0' header='yes' outcome='2'>
                    <column datatype='string' name='Data Series' ordinal='0' />
                    <column datatype='real' name='Latitude' ordinal='1' />
                    <column datatype='real' name='Longitude' ordinal='2' />
                    <column datatype='integer' name='2024 Jan' ordinal='3' />
                    <column datatype='integer' name='2023 Dec' ordinal='4' />
                    <column datatype='integer' name='2023 Nov' ordinal='5' />
                    <column datatype='integer' name='2023 Oct' ordinal='6' />
                    <column datatype='integer' name='2023 Sep' ordinal='7' />
                    <column datatype='integer' name='2023 Aug' ordinal='8' />
                    <column datatype='integer' name='2023 Jul' ordinal='9' />
                    <column datatype='integer' name='2023 Jun' ordinal='10' />
                    <column datatype='integer' name='2023 May' ordinal='11' />
                    <column datatype='integer' name='2023 Apr' ordinal='12' />
                    <column datatype='integer' name='2023 Mar' ordinal='13' />
                    <column datatype='integer' name='2023 Feb' ordinal='14' />
                    <column datatype='integer' name='2023 Jan' ordinal='15' />
                    <column datatype='integer' name='2022 Dec' ordinal='16' />
                    <column datatype='integer' name='2022 Nov' ordinal='17' />
                    <column datatype='integer' name='2022 Oct' ordinal='18' />
                    <column datatype='integer' name='2022 Sep' ordinal='19' />
                    <column datatype='integer' name='2022 Aug' ordinal='20' />
                    <column datatype='integer' name='2022 Jul' ordinal='21' />
                    <column datatype='integer' name='2022 Jun' ordinal='22' />
                    <column datatype='integer' name='2022 May' ordinal='23' />
                    <column datatype='integer' name='2022 Apr' ordinal='24' />
                    <column datatype='integer' name='2022 Mar' ordinal='25' />
                    <column datatype='integer' name='2022 Feb' ordinal='26' />
                    <column datatype='integer' name='2022 Jan' ordinal='27' />
                    <column datatype='integer' name='2021 Dec' ordinal='28' />
                    <column datatype='integer' name='2021 Nov' ordinal='29' />
                    <column datatype='integer' name='2021 Oct' ordinal='30' />
                    <column datatype='integer' name='2021 Sep' ordinal='31' />
                    <column datatype='integer' name='2021 Aug' ordinal='32' />
                    <column datatype='integer' name='2021 Jul' ordinal='33' />
                    <column datatype='integer' name='2021 Jun' ordinal='34' />
                    <column datatype='integer' name='2021 May' ordinal='35' />
                    <column datatype='integer' name='2021 Apr' ordinal='36' />
                    <column datatype='integer' name='2021 Mar' ordinal='37' />
                    <column datatype='integer' name='2021 Feb' ordinal='38' />
                    <column datatype='integer' name='2021 Jan' ordinal='39' />
                    <column datatype='integer' name='2020 Dec' ordinal='40' />
                    <column datatype='integer' name='2020 Nov' ordinal='41' />
                    <column datatype='integer' name='2020 Oct' ordinal='42' />
                    <column datatype='integer' name='2020 Sep' ordinal='43' />
                    <column datatype='integer' name='2020 Aug' ordinal='44' />
                    <column datatype='integer' name='2020 Jul' ordinal='45' />
                    <column datatype='integer' name='2020 Jun' ordinal='46' />
                    <column datatype='integer' name='2020 May' ordinal='47' />
                    <column datatype='integer' name='2020 Apr' ordinal='48' />
                    <column datatype='integer' name='2020 Mar' ordinal='49' />
                    <column datatype='integer' name='2020 Feb' ordinal='50' />
                    <column datatype='integer' name='2020 Jan' ordinal='51' />
                    <column datatype='integer' name='2019 Dec' ordinal='52' />
                    <column datatype='integer' name='2019 Nov' ordinal='53' />
                    <column datatype='integer' name='2019 Oct' ordinal='54' />
                    <column datatype='integer' name='2019 Sep' ordinal='55' />
                    <column datatype='integer' name='2019 Aug' ordinal='56' />
                    <column datatype='integer' name='2019 Jul' ordinal='57' />
                    <column datatype='integer' name='2019 Jun' ordinal='58' />
                    <column datatype='integer' name='2019 May' ordinal='59' />
                    <column datatype='integer' name='2019 Apr' ordinal='60' />
                    <column datatype='integer' name='2019 Mar' ordinal='61' />
                    <column datatype='integer' name='2019 Feb' ordinal='62' />
                    <column datatype='integer' name='2019 Jan' ordinal='63' />
                    <column datatype='integer' name='2018 Dec' ordinal='64' />
                    <column datatype='integer' name='2018 Nov' ordinal='65' />
                    <column datatype='integer' name='2018 Oct' ordinal='66' />
                    <column datatype='integer' name='2018 Sep' ordinal='67' />
                    <column datatype='integer' name='2018 Aug' ordinal='68' />
                    <column datatype='integer' name='2018 Jul' ordinal='69' />
                    <column datatype='integer' name='2018 Jun' ordinal='70' />
                    <column datatype='integer' name='2018 May' ordinal='71' />
                    <column datatype='integer' name='2018 Apr' ordinal='72' />
                    <column datatype='integer' name='2018 Mar' ordinal='73' />
                    <column datatype='integer' name='2018 Feb' ordinal='74' />
                    <column datatype='integer' name='2018 Jan' ordinal='75' />
                    <column datatype='integer' name='2017 Dec' ordinal='76' />
                    <column datatype='integer' name='2017 Nov' ordinal='77' />
                    <column datatype='integer' name='2017 Oct' ordinal='78' />
                    <column datatype='integer' name='2017 Sep' ordinal='79' />
                    <column datatype='integer' name='2017 Aug' ordinal='80' />
                    <column datatype='integer' name='2017 Jul' ordinal='81' />
                    <column datatype='integer' name='2017 Jun' ordinal='82' />
                    <column datatype='integer' name='2017 May' ordinal='83' />
                    <column datatype='integer' name='2017 Apr' ordinal='84' />
                    <column datatype='integer' name='2017 Mar' ordinal='85' />
                    <column datatype='integer' name='2017 Feb' ordinal='86' />
                    <column datatype='integer' name='2017 Jan' ordinal='87' />
                  </columns>
                </relation>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Highlight 1 (generated)' name='[Action1_A966299B150D4939AB5EA01D51C028C6]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='(Bar Chart) Tourists By Region' />
      <command command='tsc:brush'>
        <param name='field-captions' value='AGG(Four colours)' />
        <param name='target' value='(Bar Chart) Tourists By Region' />
      </command>
    </action>
    <action caption='Filter 1 (generated)' name='[Action2_CBAA878DB60F4E308F2B8A047CD7334C]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 2' type='sheet' worksheet='Top 6 countries of origin of tourists' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 2' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='(Bar Chart) Tourists By Region'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Number of Tourists By Region from 2019 to 2023</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='T1 (outputFile) - Secondary' name='federated.0cxg5ce11si89r1gz5ayv1g2irk8' />
          </datasources>
          <datasource-dependencies datasource='federated.0cxg5ce11si89r1gz5ayv1g2irk8'>
            <column caption='Four colours (Tourist Numbers)' datatype='string' name='[Calculation_2712011464437596160]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF SUM([Pivot Field Values])&gt;6000000 THEN &apos;Dark Green&apos;&#13;&#10;    ELSEIF SUM([Pivot Field Values])&gt;4000000 THEN &apos;Light Green&apos;&#13;&#10;    ELSEIF SUM([Pivot Field Values])&gt;2000000 THEN &apos;Yellow&apos;&#13;&#10;    ELSE &apos;Red&apos;&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Data Series]' role='dimension' type='nominal' />
            <column caption='Month Year' datatype='date' name='[Pivot Field Names]' role='dimension' type='ordinal' />
            <column caption='Number of Tourist Arrivals' datatype='integer' name='[Pivot Field Values]' role='measure' type='quantitative' />
            <column-instance column='[Data Series]' derivation='None' name='[none:Data Series:nk]' pivot='key' type='nominal' />
            <column-instance column='[Pivot Field Values]' derivation='Sum' name='[sum:Pivot Field Values:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2712011464437596160]' derivation='User' name='[usr:Calculation_2712011464437596160:nk]' pivot='key' type='nominal' />
            <column-instance column='[Pivot Field Names]' derivation='Year' name='[yr:Pivot Field Names:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0cxg5ce11si89r1gz5ayv1g2irk8].[none:Data Series:nk]'>
            <groupfilter expression='MIN([Pivot Field Names]) == #2017-01-01#' function='filter' user:ui-filter-by-field='true' user:ui-marker='filter-by'>
              <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                <groupfilter function='member' level='[none:Data Series:nk]' member='&quot;  Africa&quot;' />
                <groupfilter function='member' level='[none:Data Series:nk]' member='&quot;  Americas&quot;' />
                <groupfilter function='member' level='[none:Data Series:nk]' member='&quot;  Europe&quot;' />
                <groupfilter function='member' level='[none:Data Series:nk]' member='&quot;  Greater China&quot;' />
                <groupfilter function='member' level='[none:Data Series:nk]' member='&quot;  North Asia&quot;' />
                <groupfilter function='member' level='[none:Data Series:nk]' member='&quot;  Oceania&quot;' />
                <groupfilter function='member' level='[none:Data Series:nk]' member='&quot;  South Asia&quot;' />
                <groupfilter function='member' level='[none:Data Series:nk]' member='&quot;  Southeast Asia&quot;' />
                <groupfilter function='member' level='[none:Data Series:nk]' member='&quot;  West Asia&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0cxg5ce11si89r1gz5ayv1g2irk8].[yr:Pivot Field Names:ok]'>
            <groupfilter from='2019' function='range' level='[yr:Pivot Field Names:ok]' to='2023' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <natural-sort column='[federated.0cxg5ce11si89r1gz5ayv1g2irk8].[yr:Pivot Field Names:ok]' direction='DESC' />
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0cxg5ce11si89r1gz5ayv1g2irk8].[none:Data Series:nk]' direction='DESC' measure-to-sort-by='[federated.0cxg5ce11si89r1gz5ayv1g2irk8].[sum:Pivot Field Values:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0cxg5ce11si89r1gz5ayv1g2irk8].[none:Data Series:nk]</column>
            <column>[federated.0cxg5ce11si89r1gz5ayv1g2irk8].[yr:Pivot Field Names:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0cxg5ce11si89r1gz5ayv1g2irk8].[usr:Calculation_2712011464437596160:nk]' />
              <text column='[federated.0cxg5ce11si89r1gz5ayv1g2irk8].[sum:Pivot Field Values:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0cxg5ce11si89r1gz5ayv1g2irk8].[none:Data Series:nk] / [federated.0cxg5ce11si89r1gz5ayv1g2irk8].[yr:Pivot Field Names:ok])</rows>
        <cols>[federated.0cxg5ce11si89r1gz5ayv1g2irk8].[sum:Pivot Field Values:qk]</cols>
      </table>
      <simple-id uuid='{AC2E3E74-D4DA-4A4D-8257-A2DB294AEE8E}' />
    </worksheet>
    <worksheet name='(Line Chart) Tourists by Region'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Number of Tourism arrivals from 2018 to 2023</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='T1 (outputFile)' name='federated.11f3alo1x9908918n5h4g1c9dac3' />
          </datasources>
          <datasource-dependencies datasource='federated.11f3alo1x9908918n5h4g1c9dac3'>
            <column caption='Four colours' datatype='string' name='[Calculation_316377939337715712]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF SUM([Pivot Field Values])&gt;6000000 THEN &apos;Dark Green&apos;&#13;&#10;    ELSEIF SUM([Pivot Field Values])&gt;4000000 THEN &apos;Light Green&apos;&#13;&#10;    ELSEIF SUM([Pivot Field Values])&gt;2000000 THEN &apos;Yellow&apos;&#13;&#10;    ELSE &apos;Red&apos;&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Data Series]' role='dimension' type='nominal' />
            <column caption='Month Year' datatype='date' name='[Pivot Field Names]' role='dimension' type='ordinal' />
            <column caption='Number of Tourist Arrivals' datatype='integer' name='[Pivot Field Values]' role='measure' type='quantitative' />
            <column-instance column='[Data Series]' derivation='None' name='[none:Data Series:nk]' pivot='key' type='nominal' />
            <column-instance column='[Pivot Field Values]' derivation='Sum' name='[sum:Pivot Field Values:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_316377939337715712]' derivation='User' name='[usr:Calculation_316377939337715712:nk]' pivot='key' type='nominal' />
            <column-instance column='[Pivot Field Names]' derivation='Year' name='[yr:Pivot Field Names:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.11f3alo1x9908918n5h4g1c9dac3].[none:Data Series:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Data Series:nk]' member='&quot;  Africa&quot;' />
              <groupfilter function='member' level='[none:Data Series:nk]' member='&quot;  Americas&quot;' />
              <groupfilter function='member' level='[none:Data Series:nk]' member='&quot;  Europe&quot;' />
              <groupfilter function='member' level='[none:Data Series:nk]' member='&quot;  Greater China&quot;' />
              <groupfilter function='member' level='[none:Data Series:nk]' member='&quot;  North Asia&quot;' />
              <groupfilter function='member' level='[none:Data Series:nk]' member='&quot;  Oceania&quot;' />
              <groupfilter function='member' level='[none:Data Series:nk]' member='&quot;  South Asia&quot;' />
              <groupfilter function='member' level='[none:Data Series:nk]' member='&quot;  Southeast Asia&quot;' />
              <groupfilter function='member' level='[none:Data Series:nk]' member='&quot;  West Asia&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.11f3alo1x9908918n5h4g1c9dac3].[yr:Pivot Field Names:ok]'>
            <groupfilter from='2018' function='range' level='[yr:Pivot Field Names:ok]' to='2023' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <natural-sort column='[federated.11f3alo1x9908918n5h4g1c9dac3].[yr:Pivot Field Names:ok]' direction='DESC' />
          <slices>
            <column>[federated.11f3alo1x9908918n5h4g1c9dac3].[none:Data Series:nk]</column>
            <column>[federated.11f3alo1x9908918n5h4g1c9dac3].[yr:Pivot Field Names:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.11f3alo1x9908918n5h4g1c9dac3].[sum:Pivot Field Values:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.11f3alo1x9908918n5h4g1c9dac3].[usr:Calculation_316377939337715712:nk]' />
              <text column='[federated.11f3alo1x9908918n5h4g1c9dac3].[sum:Pivot Field Values:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.11f3alo1x9908918n5h4g1c9dac3].[none:Data Series:nk] / [federated.11f3alo1x9908918n5h4g1c9dac3].[yr:Pivot Field Names:ok])</rows>
        <cols>[federated.11f3alo1x9908918n5h4g1c9dac3].[sum:Pivot Field Values:qk]</cols>
      </table>
      <simple-id uuid='{389CF3BD-5C8D-4ABB-8396-5454533FA755}' />
    </worksheet>
    <worksheet name='(Stacked Bar)Tourists from 2017 to 2024'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Number of Tourists from 2017 to 2023</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='T1 (outputFile)' name='federated.11f3alo1x9908918n5h4g1c9dac3' />
          </datasources>
          <datasource-dependencies datasource='federated.11f3alo1x9908918n5h4g1c9dac3'>
            <column datatype='string' name='[Data Series]' role='dimension' type='nominal' />
            <column caption='Month Year' datatype='date' name='[Pivot Field Names]' role='dimension' type='ordinal' />
            <column caption='Number of Tourist Arrivals' datatype='integer' name='[Pivot Field Values]' role='measure' type='quantitative' />
            <column-instance column='[Data Series]' derivation='None' name='[none:Data Series:nk]' pivot='key' type='nominal' />
            <column-instance column='[Pivot Field Values]' derivation='Sum' name='[sum:Pivot Field Values:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Pivot Field Names]' derivation='Year' name='[yr:Pivot Field Names:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.11f3alo1x9908918n5h4g1c9dac3].[none:Data Series:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Data Series:nk]' member='&quot;  Africa&quot;' />
              <groupfilter function='member' level='[none:Data Series:nk]' member='&quot;  Americas&quot;' />
              <groupfilter function='member' level='[none:Data Series:nk]' member='&quot;  Europe&quot;' />
              <groupfilter function='member' level='[none:Data Series:nk]' member='&quot;  Greater China&quot;' />
              <groupfilter function='member' level='[none:Data Series:nk]' member='&quot;  North Asia&quot;' />
              <groupfilter function='member' level='[none:Data Series:nk]' member='&quot;  Oceania&quot;' />
              <groupfilter function='member' level='[none:Data Series:nk]' member='&quot;  South Asia&quot;' />
              <groupfilter function='member' level='[none:Data Series:nk]' member='&quot;  Southeast Asia&quot;' />
              <groupfilter function='member' level='[none:Data Series:nk]' member='&quot;  West Asia&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.11f3alo1x9908918n5h4g1c9dac3].[yr:Pivot Field Names:ok]'>
            <groupfilter from='2017' function='range' level='[yr:Pivot Field Names:ok]' to='2023' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.11f3alo1x9908918n5h4g1c9dac3].[none:Data Series:nk]</column>
            <column>[federated.11f3alo1x9908918n5h4g1c9dac3].[yr:Pivot Field Names:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.11f3alo1x9908918n5h4g1c9dac3].[none:Data Series:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.11f3alo1x9908918n5h4g1c9dac3].[yr:Pivot Field Names:ok]</rows>
        <cols>[federated.11f3alo1x9908918n5h4g1c9dac3].[sum:Pivot Field Values:qk]</cols>
      </table>
      <simple-id uuid='{76CD645A-E989-4135-B57F-3314EC063089}' />
    </worksheet>
    <worksheet name='Geographical Map'>
      <table>
        <view>
          <datasources>
            <datasource caption='T1 (outputFile)' name='federated.11f3alo1x9908918n5h4g1c9dac3' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.11f3alo1x9908918n5h4g1c9dac3'>
            <column datatype='string' name='[Data Series]' role='dimension' type='nominal' />
            <column aggregation='Avg' datatype='real' name='[Latitude]' role='dimension' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' datatype='real' name='[Longitude]' role='dimension' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column caption='Number of Tourist Arrivals' datatype='integer' name='[Pivot Field Values]' role='measure' type='quantitative' />
            <column-instance column='[Data Series]' derivation='None' name='[none:Data Series:nk]' pivot='key' type='nominal' />
            <column-instance column='[Latitude]' derivation='None' name='[none:Latitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Longitude]' derivation='None' name='[none:Longitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Pivot Field Values]' derivation='Sum' name='[sum:Pivot Field Values:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.11f3alo1x9908918n5h4g1c9dac3].[none:Data Series:nk]'>
            <groupfilter function='level-members' level='[none:Data Series:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.11f3alo1x9908918n5h4g1c9dac3].[none:Data Series:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.11f3alo1x9908918n5h4g1c9dac3].[none:Longitude:qk]' field-type='quantitative' max='2084190.253482759' min='-52099522.713791333' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.11f3alo1x9908918n5h4g1c9dac3].[none:Latitude:qk]' field-type='quantitative' max='20429589.057803977' min='-10821780.313835073' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.11f3alo1x9908918n5h4g1c9dac3].[sum:Pivot Field Values:qk]' max='14000000' min='1661' palette='tableau-map-temperatur' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.11f3alo1x9908918n5h4g1c9dac3].[sum:Pivot Field Values:qk]' />
              <size column='[federated.11f3alo1x9908918n5h4g1c9dac3].[sum:Pivot Field Values:qk]' />
              <text column='[federated.11f3alo1x9908918n5h4g1c9dac3].[sum:Pivot Field Values:qk]' />
              <text column='[federated.11f3alo1x9908918n5h4g1c9dac3].[none:Data Series:nk]' />
              <lod column='[federated.11f3alo1x9908918n5h4g1c9dac3].[sum:Pivot Field Values:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='3.8342540264129639' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.11f3alo1x9908918n5h4g1c9dac3].[none:Latitude:qk]</rows>
        <cols>[federated.11f3alo1x9908918n5h4g1c9dac3].[none:Longitude:qk]</cols>
      </table>
      <simple-id uuid='{46816AE5-3857-4B72-BC38-A1B6ECAA0DEE}' />
    </worksheet>
    <worksheet name='Overall Tourism Trends'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Overall Tourism Trend from 2017 to 2023</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='T1 (outputFile)' name='federated.11f3alo1x9908918n5h4g1c9dac3' />
          </datasources>
          <datasource-dependencies datasource='federated.11f3alo1x9908918n5h4g1c9dac3'>
            <column datatype='string' name='[Data Series]' role='dimension' type='nominal' />
            <column caption='Month Year' datatype='date' name='[Pivot Field Names]' role='dimension' type='ordinal' />
            <column caption='Number of Tourist Arrivals' datatype='integer' name='[Pivot Field Values]' role='measure' type='quantitative' />
            <column-instance column='[Pivot Field Values]' derivation='Sum' name='[cum:sum:Pivot Field Values:qk]' pivot='key' type='quantitative'>
              <table-calc aggregation='Sum' ordering-type='Rows' type='CumTotal' />
            </column-instance>
            <column-instance column='[Data Series]' derivation='None' name='[none:Data Series:nk]' pivot='key' type='nominal' />
            <column-instance column='[Pivot Field Values]' derivation='Sum' name='[sum:Pivot Field Values:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Pivot Field Names]' derivation='Year' name='[yr:Pivot Field Names:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.11f3alo1x9908918n5h4g1c9dac3].[none:Data Series:nk]'>
            <groupfilter function='member' level='[none:Data Series:nk]' member='&quot;Total International Visitor Arrivals By Inbound Tourism Markets&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.11f3alo1x9908918n5h4g1c9dac3].[yr:Pivot Field Names:ok]'>
            <groupfilter from='2017' function='range' level='[yr:Pivot Field Names:ok]' to='2023' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.11f3alo1x9908918n5h4g1c9dac3].[none:Data Series:nk]</column>
            <column>[federated.11f3alo1x9908918n5h4g1c9dac3].[yr:Pivot Field Names:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.11f3alo1x9908918n5h4g1c9dac3].[cum:sum:Pivot Field Values:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.11f3alo1x9908918n5h4g1c9dac3].[sum:Pivot Field Values:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.11f3alo1x9908918n5h4g1c9dac3].[cum:sum:Pivot Field Values:qk] + [federated.11f3alo1x9908918n5h4g1c9dac3].[sum:Pivot Field Values:qk])</rows>
        <cols>[federated.11f3alo1x9908918n5h4g1c9dac3].[yr:Pivot Field Names:ok]</cols>
      </table>
      <simple-id uuid='{92506CC8-24CC-4FE9-9258-6333529D7265}' />
    </worksheet>
    <worksheet name='Top 5 regions of origin for Tourists (2019 to 2023)'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Top 5 region of origins for Tourist Arrivals from 2019 to 2023 </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='T1 (outputFile)' name='federated.11f3alo1x9908918n5h4g1c9dac3' />
          </datasources>
          <datasource-dependencies datasource='federated.11f3alo1x9908918n5h4g1c9dac3'>
            <column datatype='string' name='[Data Series]' role='dimension' type='nominal' />
            <column caption='Month Year' datatype='date' name='[Pivot Field Names]' role='dimension' type='ordinal' />
            <column caption='Number of Tourist Arrivals' datatype='integer' name='[Pivot Field Values]' role='measure' type='quantitative' />
            <column-instance column='[Data Series]' derivation='None' name='[none:Data Series:nk]' pivot='key' type='nominal' />
            <column-instance column='[Pivot Field Values]' derivation='Sum' name='[sum:Pivot Field Values:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Pivot Field Names]' derivation='Year' name='[yr:Pivot Field Names:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.11f3alo1x9908918n5h4g1c9dac3].[none:Data Series:nk]'>
            <groupfilter count='5' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Pivot Field Values])' function='order' user:ui-marker='order'>
                <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                  <groupfilter function='member' level='[none:Data Series:nk]' member='&quot;  Africa&quot;' />
                  <groupfilter function='member' level='[none:Data Series:nk]' member='&quot;  Americas&quot;' />
                  <groupfilter function='member' level='[none:Data Series:nk]' member='&quot;  Europe&quot;' />
                  <groupfilter function='member' level='[none:Data Series:nk]' member='&quot;  Greater China&quot;' />
                  <groupfilter function='member' level='[none:Data Series:nk]' member='&quot;  North Asia&quot;' />
                  <groupfilter function='member' level='[none:Data Series:nk]' member='&quot;  Oceania&quot;' />
                  <groupfilter function='member' level='[none:Data Series:nk]' member='&quot;  South Asia&quot;' />
                  <groupfilter function='member' level='[none:Data Series:nk]' member='&quot;  Southeast Asia&quot;' />
                  <groupfilter function='member' level='[none:Data Series:nk]' member='&quot;  West Asia&quot;' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.11f3alo1x9908918n5h4g1c9dac3].[yr:Pivot Field Names:ok]'>
            <groupfilter from='2019' function='range' level='[yr:Pivot Field Names:ok]' to='2023' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <natural-sort column='[federated.11f3alo1x9908918n5h4g1c9dac3].[yr:Pivot Field Names:ok]' direction='DESC' />
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.11f3alo1x9908918n5h4g1c9dac3].[none:Data Series:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.11f3alo1x9908918n5h4g1c9dac3].[sum:Pivot Field Values:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.11f3alo1x9908918n5h4g1c9dac3].[none:Data Series:nk]</column>
            <column>[federated.11f3alo1x9908918n5h4g1c9dac3].[yr:Pivot Field Names:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.11f3alo1x9908918n5h4g1c9dac3].[none:Data Series:nk]' />
              <text column='[federated.11f3alo1x9908918n5h4g1c9dac3].[sum:Pivot Field Values:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.11f3alo1x9908918n5h4g1c9dac3].[yr:Pivot Field Names:ok] / [federated.11f3alo1x9908918n5h4g1c9dac3].[none:Data Series:nk])</rows>
        <cols>[federated.11f3alo1x9908918n5h4g1c9dac3].[sum:Pivot Field Values:qk]</cols>
      </table>
      <simple-id uuid='{93462F80-4F8F-4B52-A9E9-38C10F49EF57}' />
    </worksheet>
    <worksheet name='Top 6 countries of origin of tourists'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Top 6 countries of origin for Tourists (2019 to 2023)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='T1 (outputFile)' name='federated.11f3alo1x9908918n5h4g1c9dac3' />
          </datasources>
          <datasource-dependencies datasource='federated.11f3alo1x9908918n5h4g1c9dac3'>
            <column datatype='string' name='[Data Series]' role='dimension' type='nominal' />
            <column caption='Month Year' datatype='date' name='[Pivot Field Names]' role='dimension' type='ordinal' />
            <column caption='Number of Tourist Arrivals' datatype='integer' name='[Pivot Field Values]' role='measure' type='quantitative' />
            <column-instance column='[Data Series]' derivation='None' name='[none:Data Series:nk]' pivot='key' type='nominal' />
            <column-instance column='[Pivot Field Values]' derivation='Sum' name='[sum:Pivot Field Values:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Pivot Field Names]' derivation='Year' name='[yr:Pivot Field Names:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.11f3alo1x9908918n5h4g1c9dac3].[none:Data Series:nk]'>
            <groupfilter count='6' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Pivot Field Values])' function='order' user:ui-marker='order'>
                <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                  <groupfilter function='level-members' level='[none:Data Series:nk]' />
                  <groupfilter function='union'>
                    <groupfilter function='member' level='[none:Data Series:nk]' member='&quot;    Other Markets In Africa&quot;' />
                    <groupfilter function='member' level='[none:Data Series:nk]' member='&quot;    Other Markets In Americas&quot;' />
                    <groupfilter function='member' level='[none:Data Series:nk]' member='&quot;    Other Markets In Europe&quot;' />
                    <groupfilter function='member' level='[none:Data Series:nk]' member='&quot;    Other Markets In Greater China&quot;' />
                    <groupfilter function='member' level='[none:Data Series:nk]' member='&quot;    Other Markets In North Asia&quot;' />
                    <groupfilter function='member' level='[none:Data Series:nk]' member='&quot;    Other Markets In Oceania&quot;' />
                    <groupfilter function='member' level='[none:Data Series:nk]' member='&quot;    Other Markets In South Asia&quot;' />
                    <groupfilter function='member' level='[none:Data Series:nk]' member='&quot;    Other Markets In Southeast Asia&quot;' />
                    <groupfilter function='member' level='[none:Data Series:nk]' member='&quot;    Other Markets In West Asia&quot;' />
                    <groupfilter function='member' level='[none:Data Series:nk]' member='&quot;  Africa&quot;' />
                    <groupfilter function='member' level='[none:Data Series:nk]' member='&quot;  Americas&quot;' />
                    <groupfilter function='member' level='[none:Data Series:nk]' member='&quot;  Europe&quot;' />
                    <groupfilter function='member' level='[none:Data Series:nk]' member='&quot;  Greater China&quot;' />
                    <groupfilter function='member' level='[none:Data Series:nk]' member='&quot;  North Asia&quot;' />
                    <groupfilter function='member' level='[none:Data Series:nk]' member='&quot;  Oceania&quot;' />
                    <groupfilter function='member' level='[none:Data Series:nk]' member='&quot;  South Asia&quot;' />
                    <groupfilter function='member' level='[none:Data Series:nk]' member='&quot;  Southeast Asia&quot;' />
                    <groupfilter function='member' level='[none:Data Series:nk]' member='&quot;  West Asia&quot;' />
                    <groupfilter function='member' level='[none:Data Series:nk]' member='&quot;Total International Visitor Arrivals By Inbound Tourism Markets&quot;' />
                    <groupfilter function='member' level='[none:Data Series:nk]' member='%null%' />
                  </groupfilter>
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.11f3alo1x9908918n5h4g1c9dac3].[yr:Pivot Field Names:ok]'>
            <groupfilter from='2019' function='range' level='[yr:Pivot Field Names:ok]' to='2023' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.11f3alo1x9908918n5h4g1c9dac3].[none:Data Series:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.11f3alo1x9908918n5h4g1c9dac3].[sum:Pivot Field Values:qk]' shelf='rows' />
            <shelf-sort-v2 dimension-to-sort='[federated.11f3alo1x9908918n5h4g1c9dac3].[yr:Pivot Field Names:ok]' direction='DESC' measure-to-sort-by='[federated.11f3alo1x9908918n5h4g1c9dac3].[yr:Pivot Field Names:ok]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.11f3alo1x9908918n5h4g1c9dac3].[yr:Pivot Field Names:ok]</column>
            <column>[federated.11f3alo1x9908918n5h4g1c9dac3].[none:Data Series:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.11f3alo1x9908918n5h4g1c9dac3].[none:Data Series:nk]' />
              <text column='[federated.11f3alo1x9908918n5h4g1c9dac3].[sum:Pivot Field Values:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.11f3alo1x9908918n5h4g1c9dac3].[yr:Pivot Field Names:ok] / [federated.11f3alo1x9908918n5h4g1c9dac3].[none:Data Series:nk])</rows>
        <cols>[federated.11f3alo1x9908918n5h4g1c9dac3].[sum:Pivot Field Values:qk]</cols>
      </table>
      <simple-id uuid='{A8CE444E-22A3-4FC2-A6EC-857C67AD1845}' />
    </worksheet>
    <worksheet name='Tourist arrivals from key north asia countries'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Tourists arrival from key north asian countries (2019 to 2023)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='T1 (outputFile)' name='federated.11f3alo1x9908918n5h4g1c9dac3' />
          </datasources>
          <datasource-dependencies datasource='federated.11f3alo1x9908918n5h4g1c9dac3'>
            <column datatype='string' name='[Data Series]' role='dimension' type='nominal' />
            <column caption='Month Year' datatype='date' name='[Pivot Field Names]' role='dimension' type='ordinal' />
            <column caption='Number of Tourist Arrivals' datatype='integer' name='[Pivot Field Values]' role='measure' type='quantitative' />
            <column-instance column='[Data Series]' derivation='None' name='[none:Data Series:nk]' pivot='key' type='nominal' />
            <column-instance column='[Pivot Field Values]' derivation='Sum' name='[sum:Pivot Field Values:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Pivot Field Names]' derivation='Year' name='[yr:Pivot Field Names:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.11f3alo1x9908918n5h4g1c9dac3].[none:Data Series:nk]'>
            <groupfilter count='6' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Pivot Field Values])' function='order' user:ui-marker='order'>
                <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                  <groupfilter function='member' level='[none:Data Series:nk]' member='&quot;    China&quot;' />
                  <groupfilter function='member' level='[none:Data Series:nk]' member='&quot;    Japan&quot;' />
                  <groupfilter function='member' level='[none:Data Series:nk]' member='&quot;    South Korea&quot;' />
                  <groupfilter function='member' level='[none:Data Series:nk]' member='&quot;    Taiwan&quot;' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.11f3alo1x9908918n5h4g1c9dac3].[yr:Pivot Field Names:ok]'>
            <groupfilter from='2019' function='range' level='[yr:Pivot Field Names:ok]' to='2023' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.11f3alo1x9908918n5h4g1c9dac3].[none:Data Series:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.11f3alo1x9908918n5h4g1c9dac3].[sum:Pivot Field Values:qk]' shelf='rows' />
            <shelf-sort-v2 dimension-to-sort='[federated.11f3alo1x9908918n5h4g1c9dac3].[yr:Pivot Field Names:ok]' direction='DESC' measure-to-sort-by='[federated.11f3alo1x9908918n5h4g1c9dac3].[yr:Pivot Field Names:ok]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.11f3alo1x9908918n5h4g1c9dac3].[yr:Pivot Field Names:ok]</column>
            <column>[federated.11f3alo1x9908918n5h4g1c9dac3].[none:Data Series:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.11f3alo1x9908918n5h4g1c9dac3].[none:Data Series:nk]' />
              <text column='[federated.11f3alo1x9908918n5h4g1c9dac3].[sum:Pivot Field Values:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.11f3alo1x9908918n5h4g1c9dac3].[yr:Pivot Field Names:ok] / [federated.11f3alo1x9908918n5h4g1c9dac3].[none:Data Series:nk])</rows>
        <cols>[federated.11f3alo1x9908918n5h4g1c9dac3].[sum:Pivot Field Values:qk]</cols>
      </table>
      <simple-id uuid='{A032A054-1FAF-4FCC-8676-98B5EE5EBECE}' />
    </worksheet>
    <worksheet name='Tourist arrivals from key western countries'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Tourists arrival from key western countries (2019 to 2023)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='T1 (outputFile)' name='federated.11f3alo1x9908918n5h4g1c9dac3' />
          </datasources>
          <datasource-dependencies datasource='federated.11f3alo1x9908918n5h4g1c9dac3'>
            <column datatype='string' name='[Data Series]' role='dimension' type='nominal' />
            <column caption='Month Year' datatype='date' name='[Pivot Field Names]' role='dimension' type='ordinal' />
            <column caption='Number of Tourist Arrivals' datatype='integer' name='[Pivot Field Values]' role='measure' type='quantitative' />
            <column-instance column='[Data Series]' derivation='None' name='[none:Data Series:nk]' pivot='key' type='nominal' />
            <column-instance column='[Pivot Field Values]' derivation='Sum' name='[sum:Pivot Field Values:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Pivot Field Names]' derivation='Year' name='[yr:Pivot Field Names:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.11f3alo1x9908918n5h4g1c9dac3].[none:Data Series:nk]'>
            <groupfilter count='6' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Pivot Field Values])' function='order' user:ui-marker='order'>
                <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                  <groupfilter function='member' level='[none:Data Series:nk]' member='&quot;    Australia&quot;' />
                  <groupfilter function='member' level='[none:Data Series:nk]' member='&quot;    Canada&quot;' />
                  <groupfilter function='member' level='[none:Data Series:nk]' member='&quot;    France&quot;' />
                  <groupfilter function='member' level='[none:Data Series:nk]' member='&quot;    Germany&quot;' />
                  <groupfilter function='member' level='[none:Data Series:nk]' member='&quot;    New Zealand&quot;' />
                  <groupfilter function='member' level='[none:Data Series:nk]' member='&quot;    United Kingdom&quot;' />
                  <groupfilter function='member' level='[none:Data Series:nk]' member='&quot;    USA&quot;' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.11f3alo1x9908918n5h4g1c9dac3].[yr:Pivot Field Names:ok]'>
            <groupfilter from='2019' function='range' level='[yr:Pivot Field Names:ok]' to='2023' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.11f3alo1x9908918n5h4g1c9dac3].[none:Data Series:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.11f3alo1x9908918n5h4g1c9dac3].[sum:Pivot Field Values:qk]' shelf='rows' />
            <shelf-sort-v2 dimension-to-sort='[federated.11f3alo1x9908918n5h4g1c9dac3].[yr:Pivot Field Names:ok]' direction='DESC' measure-to-sort-by='[federated.11f3alo1x9908918n5h4g1c9dac3].[yr:Pivot Field Names:ok]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.11f3alo1x9908918n5h4g1c9dac3].[yr:Pivot Field Names:ok]</column>
            <column>[federated.11f3alo1x9908918n5h4g1c9dac3].[none:Data Series:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.11f3alo1x9908918n5h4g1c9dac3].[none:Data Series:nk]' />
              <text column='[federated.11f3alo1x9908918n5h4g1c9dac3].[sum:Pivot Field Values:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.11f3alo1x9908918n5h4g1c9dac3].[yr:Pivot Field Names:ok] / [federated.11f3alo1x9908918n5h4g1c9dac3].[none:Data Series:nk])</rows>
        <cols>[federated.11f3alo1x9908918n5h4g1c9dac3].[sum:Pivot Field Values:qk]</cols>
      </table>
      <simple-id uuid='{87162E1C-3CF1-4EA7-A1CB-7E3C7BA47DFE}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Singapore Tourist Arrivals Dashboard</run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='14' param='horz' type-v2='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='5' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
              <zone h='6250' id='7' type-v2='title' w='98400' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='91750' id='6' type-v2='layout-basic' w='98400' x='800' y='7250'>
                <zone h='91750' id='8' name='Overall Tourism Trends' w='49200' x='800' y='7250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='91750' id='12' name='Top 5 regions of origin for Tourists (2019 to 2023)' w='49200' x='50000' y='7250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <layout-options>
            <title>
              <formatted-text>
                <run>Singapore Tourist Arrivals Dashboard</run>
              </formatted-text>
            </title>
          </layout-options>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='50' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='49' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
                <zone h='6250' id='7' type-v2='title' w='98400' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='91750' id='8' is-fixed='true' name='Overall Tourism Trends' w='49200' x='800' y='7250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='91750' id='12' is-fixed='true' name='Top 5 regions of origin for Tourists (2019 to 2023)' w='49200' x='50000' y='7250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{7AFFEA77-A877-4C93-9284-39F2309E07A9}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 2'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Singapore Tourist Arrivals Dashboard (Secondary)</run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='15' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
            <zone h='6250' id='14' type-v2='title' w='98400' x='800' y='1000'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='91750' id='13' param='vert' type-v2='layout-flow' w='98400' x='800' y='7250'>
              <zone h='91750' id='7' param='horz' type-v2='layout-flow' w='98400' x='800' y='7250'>
                <zone h='91750' id='5' type-v2='layout-basic' w='98400' x='800' y='7250'>
                  <zone h='91750' id='3' name='Top 6 countries of origin of tourists' w='49200' x='800' y='7250'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='91750' id='16' name='Geographical Map' w='49200' x='50000' y='7250'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <layout-options>
            <title>
              <formatted-text>
                <run>Singapore Tourist Arrivals Dashboard (Secondary)</run>
              </formatted-text>
            </title>
          </layout-options>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='36' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='35' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
                <zone h='6250' id='14' type-v2='title' w='98400' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='91750' id='3' is-fixed='true' name='Top 6 countries of origin of tourists' w='49200' x='800' y='7250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='91750' id='16' is-fixed='true' name='Geographical Map' w='49200' x='50000' y='7250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{46B5DBD8-A942-40AA-BD34-0C65F86AEF4B}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='63'>
    <window class='worksheet' name='Overall Tourism Trends'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.11f3alo1x9908918n5h4g1c9dac3].[none:Data Series:nk]</field>
            <field>[federated.11f3alo1x9908918n5h4g1c9dac3].[usr:Calculation_316377939337715712:nk]</field>
            <field>[federated.11f3alo1x9908918n5h4g1c9dac3].[yr:Pivot Field Names:ok]</field>
          </color-one-way>
        </highlight>
        <floating-toolbar-visibility value='1' />
      </viewpoint>
      <simple-id uuid='{F005C10E-03A5-4094-8F66-853E18AD8696}' />
    </window>
    <window class='worksheet' name='(Stacked Bar)Tourists from 2017 to 2024'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.11f3alo1x9908918n5h4g1c9dac3].[none:Data Series:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.11f3alo1x9908918n5h4g1c9dac3].[none:Data Series:nk]</field>
            <field>[federated.11f3alo1x9908918n5h4g1c9dac3].[yr:Pivot Field Names:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6F40502F-BDF3-4998-8265-F5E5B0161E68}' />
    </window>
    <window class='worksheet' name='(Line Chart) Tourists by Region'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.11f3alo1x9908918n5h4g1c9dac3].[none:Data Series:nk]' type='highlighter' />
            <card pane-specification-id='0' param='[federated.11f3alo1x9908918n5h4g1c9dac3].[usr:Calculation_316377939337715712:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.11f3alo1x9908918n5h4g1c9dac3].[none:Data Series:nk]</field>
            <field>[federated.11f3alo1x9908918n5h4g1c9dac3].[sum:Pivot Field Values:qk]</field>
            <field>[federated.11f3alo1x9908918n5h4g1c9dac3].[tyr:Pivot Field Names:ok]</field>
            <field>[federated.11f3alo1x9908918n5h4g1c9dac3].[tyr:Pivot Field Names:qk]</field>
            <field>[federated.11f3alo1x9908918n5h4g1c9dac3].[usr:Calculation_316377939337715712:nk]</field>
            <field>[federated.11f3alo1x9908918n5h4g1c9dac3].[yr:Pivot Field Names:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7B173CF0-BF95-45E3-8B56-17508CF81F34}' />
    </window>
    <window class='worksheet' name='(Bar Chart) Tourists By Region'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0cxg5ce11si89r1gz5ayv1g2irk8].[none:Data Series:nk]' type='highlighter' />
            <card pane-specification-id='0' param='[federated.0cxg5ce11si89r1gz5ayv1g2irk8].[usr:Calculation_2712011464437596160:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0cxg5ce11si89r1gz5ayv1g2irk8].[:Measure Names]</field>
            <field>[federated.0cxg5ce11si89r1gz5ayv1g2irk8].[none:Data Series:nk]</field>
            <field>[federated.0cxg5ce11si89r1gz5ayv1g2irk8].[qr:Pivot Field Names:ok]</field>
            <field>[federated.0cxg5ce11si89r1gz5ayv1g2irk8].[usr:Calculation_2712011464437596160:nk]</field>
            <field>[federated.0cxg5ce11si89r1gz5ayv1g2irk8].[yr:Pivot Field Names:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{77649416-49F6-4580-AB83-994E94944A0C}' />
    </window>
    <window class='worksheet' name='Top 5 regions of origin for Tourists (2019 to 2023)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.11f3alo1x9908918n5h4g1c9dac3].[none:Data Series:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.11f3alo1x9908918n5h4g1c9dac3].[none:Data Series:nk]</field>
            <field>[federated.11f3alo1x9908918n5h4g1c9dac3].[yr:Pivot Field Names:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{64747BF7-98BD-4651-83B6-5583E17239D0}' />
    </window>
    <window class='worksheet' name='Top 6 countries of origin of tourists'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.11f3alo1x9908918n5h4g1c9dac3].[none:Data Series:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.11f3alo1x9908918n5h4g1c9dac3].[none:Data Series:nk]</field>
            <field>[federated.11f3alo1x9908918n5h4g1c9dac3].[yr:Pivot Field Names:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4B74555C-419A-4CD3-A5B7-8BC336CC5231}' />
    </window>
    <window class='worksheet' name='Tourist arrivals from key western countries'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.11f3alo1x9908918n5h4g1c9dac3].[none:Data Series:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.11f3alo1x9908918n5h4g1c9dac3].[none:Data Series:nk]</field>
            <field>[federated.11f3alo1x9908918n5h4g1c9dac3].[yr:Pivot Field Names:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9FC7FA2D-EA6F-4798-A42A-EF9FDE8AF4BD}' />
    </window>
    <window class='worksheet' name='Tourist arrivals from key north asia countries'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.11f3alo1x9908918n5h4g1c9dac3].[none:Data Series:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.11f3alo1x9908918n5h4g1c9dac3].[none:Data Series:nk]</field>
            <field>[federated.11f3alo1x9908918n5h4g1c9dac3].[yr:Pivot Field Names:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F08F248F-6088-40D9-B1DC-2ED10577FA8C}' />
    </window>
    <window class='worksheet' name='Geographical Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.11f3alo1x9908918n5h4g1c9dac3].[sum:Pivot Field Values:qk]' type='color' />
            <card pane-specification-id='0' param='[federated.11f3alo1x9908918n5h4g1c9dac3].[sum:Pivot Field Values:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.11f3alo1x9908918n5h4g1c9dac3].[none:Data Series:nk]</field>
            <field>[federated.11f3alo1x9908918n5h4g1c9dac3].[none:Latitude:qk]</field>
            <field>[federated.11f3alo1x9908918n5h4g1c9dac3].[none:Longitude:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A0BF292C-B7D3-4ACA-A5C4-B38000BABD13}' />
    </window>
    <window class='dashboard' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Overall Tourism Trends'>
          <zoom type='entire-view' />
          <floating-toolbar-visibility value='1' />
        </viewpoint>
        <viewpoint name='Top 5 regions of origin for Tourists (2019 to 2023)' />
      </viewpoints>
      <active id='8' />
      <simple-id uuid='{46558CBB-6E51-491E-9D81-0C0D1C4FD915}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 2'>
      <viewpoints>
        <viewpoint name='Geographical Map'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Top 6 countries of origin of tourists' />
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{A67FCA68-31FD-4ED5-9A17-97B0C000E376}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='(Bar Chart) Tourists By Region' width='192'>
      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
      YII=
    </thumbnail>
    <thumbnail height='192' name='(Line Chart) Tourists by Region' width='192'>
      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
      7gmwi8ca/wBp6gh15prXnQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='(Stacked Bar)Tourists from 2017 to 2024' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      8zlZ3WAkAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Dashboard 2' width='192'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='Geographical Map' width='192'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='Overall Tourism Trends' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Top 5 regions of origin for Tourists (2019 to 2023)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Top 6 countries of origin of tourists' width='192'>
      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
      YII=
    </thumbnail>
    <thumbnail height='192' name='Tourist arrivals from key north asia countries' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Tourist arrivals from key western countries' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
